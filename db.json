{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/aria/source/css/atom-one-dark.css","path":"css/atom-one-dark.css","modified":1,"renderable":1},{"_id":"themes/aria/source/css/atom-one-light.css","path":"css/atom-one-light.css","modified":1,"renderable":1},{"_id":"themes/aria/source/css/commentjs.css","path":"css/commentjs.css","modified":1,"renderable":1},{"_id":"themes/aria/source/css/custom.styl","path":"css/custom.styl","modified":1,"renderable":1},{"_id":"themes/aria/source/css/comment.styl","path":"css/comment.styl","modified":1,"renderable":1},{"_id":"themes/aria/source/css/footer.styl","path":"css/footer.styl","modified":1,"renderable":1},{"_id":"themes/aria/source/css/header.styl","path":"css/header.styl","modified":1,"renderable":1},{"_id":"themes/aria/source/css/index.styl","path":"css/index.styl","modified":1,"renderable":1},{"_id":"themes/aria/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/aria/source/css/info.styl","path":"css/info.styl","modified":1,"renderable":1},{"_id":"themes/aria/source/css/nav.styl","path":"css/nav.styl","modified":1,"renderable":1},{"_id":"themes/aria/source/css/lightgallery.min.css","path":"css/lightgallery.min.css","modified":1,"renderable":1},{"_id":"themes/aria/source/css/normalize.css","path":"css/normalize.css","modified":1,"renderable":1},{"_id":"themes/aria/source/css/page.styl","path":"css/page.styl","modified":1,"renderable":1},{"_id":"themes/aria/source/css/post.styl","path":"css/post.styl","modified":1,"renderable":1},{"_id":"themes/aria/source/css/reward.styl","path":"css/reward.styl","modified":1,"renderable":1},{"_id":"themes/aria/source/css/sidebar.styl","path":"css/sidebar.styl","modified":1,"renderable":1},{"_id":"themes/aria/source/css/solarized-dark.css","path":"css/solarized-dark.css","modified":1,"renderable":1},{"_id":"themes/aria/source/css/solarized-light.css","path":"css/solarized-light.css","modified":1,"renderable":1},{"_id":"themes/aria/source/css/variables.styl","path":"css/variables.styl","modified":1,"renderable":1},{"_id":"themes/aria/source/fonts/lg.eot","path":"fonts/lg.eot","modified":1,"renderable":1},{"_id":"themes/aria/source/fonts/lg.svg","path":"fonts/lg.svg","modified":1,"renderable":1},{"_id":"themes/aria/source/fonts/lg.ttf","path":"fonts/lg.ttf","modified":1,"renderable":1},{"_id":"themes/aria/source/fonts/lg.woff","path":"fonts/lg.woff","modified":1,"renderable":1},{"_id":"themes/aria/source/images/WeChatPay.png","path":"images/WeChatPay.png","modified":1,"renderable":1},{"_id":"themes/aria/source/images/avatar.png","path":"images/avatar.png","modified":1,"renderable":1},{"_id":"themes/aria/source/images/logo.png","path":"images/logo.png","modified":1,"renderable":1},{"_id":"themes/aria/source/js/busuanzi.pure.mini.js","path":"js/busuanzi.pure.mini.js","modified":1,"renderable":1},{"_id":"themes/aria/source/js/clipboard.min.js","path":"js/clipboard.min.js","modified":1,"renderable":1},{"_id":"themes/aria/source/js/commentjs.js","path":"js/commentjs.js","modified":1,"renderable":1},{"_id":"themes/aria/source/js/custom.js","path":"js/custom.js","modified":1,"renderable":1},{"_id":"themes/aria/source/js/highlight.min.js","path":"js/highlight.min.js","modified":1,"renderable":1},{"_id":"themes/aria/source/js/lg-fullscreen.min.js","path":"js/lg-fullscreen.min.js","modified":1,"renderable":1},{"_id":"themes/aria/source/js/lg-hash.min.js","path":"js/lg-hash.min.js","modified":1,"renderable":1},{"_id":"themes/aria/source/js/lg-thumbnail.min.js","path":"js/lg-thumbnail.min.js","modified":1,"renderable":1},{"_id":"themes/aria/source/js/lg-pager.min.js","path":"js/lg-pager.min.js","modified":1,"renderable":1},{"_id":"themes/aria/source/js/index.js","path":"js/index.js","modified":1,"renderable":1},{"_id":"themes/aria/source/js/lg-zoom.min.js","path":"js/lg-zoom.min.js","modified":1,"renderable":1},{"_id":"themes/aria/source/js/marked.min.js","path":"js/marked.min.js","modified":1,"renderable":1},{"_id":"themes/aria/source/js/scrollspy.js","path":"js/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/aria/source/js/timeago.min.js","path":"js/timeago.min.js","modified":1,"renderable":1},{"_id":"themes/aria/source/js/util.js","path":"js/util.js","modified":1,"renderable":1},{"_id":"themes/aria/source/js/lightgallery.min.js","path":"js/lightgallery.min.js","modified":1,"renderable":1},{"_id":"themes/aria/source/js/search.js","path":"js/search.js","modified":1,"renderable":1},{"_id":"themes/aria/source/js/jquery.min.js","path":"js/jquery.min.js","modified":1,"renderable":1},{"_id":"themes/aria/source/images/background.png","path":"images/background.png","modified":1,"renderable":1},{"_id":"themes/aria/source/js/fontawesome-all.min.js","path":"js/fontawesome-all.min.js","modified":1,"renderable":1}],"Cache":[{"_id":"themes/aria/LICENSE","hash":"b314c7ebb7d599944981908b7f3ed33a30e78f3a","modified":1555982445101},{"_id":"themes/aria/README.md","hash":"efc87a35b4dd92458d46414d44fadc4320e8628f","modified":1555982445105},{"_id":"themes/aria/_config.yml","hash":"cedb1042428f9c2af44d91e69e1712529c36ebe7","modified":1555984140863},{"_id":"themes/aria/README.zh_CN.md","hash":"c9c9d6ef5401aa7f806b4cc4bea9facc26ccf724","modified":1555982445107},{"_id":"themes/aria/_config.yml.example","hash":"b0b73c6cce2dac9fce940ad3630d848bc7b207ae","modified":1555982445113},{"_id":"themes/aria/package.json","hash":"5b2ace3e57e7ca95420ecc061ff073eda89664b5","modified":1555982445153},{"_id":"source/categories/index.md","hash":"8449ff4433b5415ff7542ab5bf2553d24947a73a","modified":1555982445081},{"_id":"source/guessbook/index.md","hash":"0e17195ff4a8da1ff89117abfa9749a15b430730","modified":1555982445083},{"_id":"source/_posts/Layer-Sequence结构图.md","hash":"ac34c8a40c00c505c78d0a5d9d102f979417bbd8","modified":1555982445044},{"_id":"source/_posts/Linux相关操作.md","hash":"a4c3cd80f50e2c11c7fafe2ea480f6b5779fca19","modified":1555982445051},{"_id":"source/_posts/SystemVerilog语法释义.md","hash":"9bc8af557bdceb8ed0509f8b16eb573f57d4a2fa","modified":1555982445056},{"_id":"source/_posts/QQ红包打赏,验证技术微信公众号，扫码即可，你的支持，就是技术的不断前进！.md","hash":"8ded6d77d5618e04bdb7d81f9725cc5055e6dc29","modified":1555982445053},{"_id":"source/_posts/UVM-Register-Model.md","hash":"eddbdb33e542291e8f11b15a93585a847418942f","modified":1555982445057},{"_id":"source/_posts/UVM寄存器模型中soft和hard-reset有什么区别？.md","hash":"6a15d82959d1d028436ce70f05de0893f9119c50","modified":1555982445059},{"_id":"source/_posts/VCS-Crash如何定位？.md","hash":"7dfc91294167862cf080d78a42cad44733132cf6","modified":1555982445060},{"_id":"source/_posts/clocking块为什么能保证race-free.md","hash":"68356232dd41c8f543570bb259b072dbfb82d57c","modified":1555982445062},{"_id":"source/_posts/github回退代码到历史指定版本.md","hash":"40daf827729df687a2800480465f14861cb34ca6","modified":1555983222452},{"_id":"source/_posts/qrcode_20190416165009.png","hash":"ab7be92bf51a30826adeb4e0767c7c99ebdf172b","modified":1555982445066},{"_id":"source/_posts/使用synopsys uvmgen快速生成uvm环境.md","hash":"2d0ff96d7c21fa92bbd6b64be049e250cc22c72b","modified":1555982445069},{"_id":"source/_posts/常用脚本收集.md","hash":"0ccf88519f3432d94c3a92f57f46f54762a741ea","modified":1555982445078},{"_id":"source/_posts/形式验证.md","hash":"07ce8b61836ea6dc2d38f62b185624f1f6e66f25","modified":1555982445079},{"_id":"source/hyperlink/index.md","hash":"a36b804debd4155ba59d96401eedfcc52a6b5afb","modified":1555985160550},{"_id":"source/tags/index.md","hash":"3802b2d5748e04d55539d80947c5ee8b6bd4d9d1","modified":1555982445087},{"_id":"themes/aria/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1555982445115},{"_id":"themes/aria/languages/zh_CN.yml","hash":"26f54bbc7b18a3c4d900f85d7c49c462dc8df90e","modified":1555984494067},{"_id":"themes/aria/languages/en.yml","hash":"ab81f3ccb132625a81c28f19c760a18a46838dfe","modified":1555982445117},{"_id":"themes/aria/languages/zh_HK.yml","hash":"b17246baa97115b39a02a5c91d0f388dcbc8b339","modified":1555982445120},{"_id":"themes/aria/languages/zh_TW.yml","hash":"d2520872c650b2cc1e7450a7bb476a162e6deb0d","modified":1555982445121},{"_id":"themes/aria/layout/archive.njk","hash":"b1a66de640bbbd1ff7c6ecaf99e2f545b123fa85","modified":1555982445125},{"_id":"themes/aria/layout/_layout.njk","hash":"3600d28ced6975322bf29b1a2d16273a1cef373b","modified":1555983667762},{"_id":"themes/aria/layout/categories.njk","hash":"231d1fa407836245331659479cd12b3e803e7fe0","modified":1555982445127},{"_id":"themes/aria/layout/category.njk","hash":"7ab9a47f75d9bd83b3ced1a805d44a952bb3b675","modified":1555982445128},{"_id":"themes/aria/layout/comment.njk","hash":"9361ffce5b9b62fc22e45a037618486dae2cf23b","modified":1555982445130},{"_id":"themes/aria/layout/header.njk","hash":"2fb823c697702f065ffbaf17d92888c8ca0839d7","modified":1555982445134},{"_id":"themes/aria/layout/footer.njk","hash":"980f4ad22f2cf8b5c0599e433d20efa09a532287","modified":1555982445132},{"_id":"themes/aria/layout/index.njk","hash":"d3acaac5908cd41b106f8d0bc0d09a4b3dde0df5","modified":1555982445136},{"_id":"themes/aria/layout/info.njk","hash":"8eedd696aff1c56c21f6cfa6bc532b34567cf6c1","modified":1555982445138},{"_id":"themes/aria/layout/page.njk","hash":"19147f4f85c89fbce8d215986a99e743f451a3f1","modified":1555982445141},{"_id":"themes/aria/layout/post.njk","hash":"d6338722ff7c9dba7f2658a1e5b90af3e98e040e","modified":1555983590753},{"_id":"themes/aria/layout/reward.njk","hash":"92d2646b593bbffccd0c9daf0f90828f17d14ab4","modified":1555982445146},{"_id":"themes/aria/layout/sidebar.njk","hash":"c4eadc5c82e3ff26be6d94acec9a8c4fbe7caa96","modified":1555982445148},{"_id":"themes/aria/layout/tag.njk","hash":"653093fc9ce3cfd3c6d68685d5c0fd9b763d2ed2","modified":1555982445150},{"_id":"themes/aria/layout/tags.njk","hash":"fe2150ec15caa109f2d67e8a1e77e16821acb0cf","modified":1555982445152},{"_id":"themes/aria/scripts/regexp-tags.js","hash":"72227879bc9a543628661ff121965062f105e0d8","modified":1555982445155},{"_id":"source/_posts/使用synopsys uvmgen快速生成uvm环境/uvmgen1.png","hash":"080fe5351143c34ceeafdceced296f9d547786bf","modified":1555982445071},{"_id":"source/_posts/使用synopsys uvmgen快速生成uvm环境/uvmgen2.png","hash":"c8cd870860bc1cdf781b85ec6c313b2b0062abe1","modified":1555982445073},{"_id":"source/_posts/Layer-Sequence结构图/Layer-Sequence结构图.png","hash":"e1730adba66bece584305cd1a4b2c9d506b51863","modified":1555982445047},{"_id":"source/_posts/使用synopsys uvmgen快速生成uvm环境/uvmgen3.png","hash":"21552670e8ff408efd9056b7adb307545351c73a","modified":1555982445076},{"_id":"themes/aria/source/css/atom-one-dark.css","hash":"91671ed42c0ce1363843144a9666d34faddb7e27","modified":1555982445157},{"_id":"themes/aria/source/css/atom-one-light.css","hash":"e432dc56345e4c5e74baffb36ea1b72f469ec2b5","modified":1555982445159},{"_id":"themes/aria/source/css/commentjs.css","hash":"c9121d34acb984b285f6e3ff17c1757cf76dad09","modified":1555982445162},{"_id":"themes/aria/source/css/custom.styl","hash":"38ce5ca0147b93e89d56b76064267c874685b2fe","modified":1555982445164},{"_id":"themes/aria/source/css/comment.styl","hash":"2db33daa184a980aa83733c51c5e53159474f123","modified":1555982445160},{"_id":"themes/aria/source/css/footer.styl","hash":"8419751222b2dec293e78deca1f3d6bac69d8968","modified":1555982445166},{"_id":"themes/aria/source/css/header.styl","hash":"c59f08a5edb4c91830b55da1c3b7e35ce7ac0b6d","modified":1555982445168},{"_id":"themes/aria/source/css/index.styl","hash":"aa5892e510f4f253e3c668d9d2a5d2c4e813a5a3","modified":1555982445170},{"_id":"themes/aria/source/css/main.styl","hash":"82ec2e07158ba9c114bbde3b2b94d7dc4aaad0f8","modified":1555982445176},{"_id":"themes/aria/source/css/info.styl","hash":"d39f52598109c96a39b24962499c3c4d17b92aed","modified":1555982445172},{"_id":"themes/aria/source/css/nav.styl","hash":"c76ff6ef6c2cda6662bd2a7adc480788e9dbbde4","modified":1555982445178},{"_id":"themes/aria/source/css/lightgallery.min.css","hash":"9e76bdad163856774a96b1230a08dc506600a973","modified":1555982445174},{"_id":"themes/aria/source/css/normalize.css","hash":"826bdf28095ebc25f5be69d58eadfc9e1b49b7f7","modified":1555982445179},{"_id":"themes/aria/source/css/page.styl","hash":"dc76eb2d489ab66950120c849e98ebdce21ba167","modified":1555982445181},{"_id":"themes/aria/source/css/post.styl","hash":"f35475bac616276916673a837931cf017e7d544b","modified":1555982445183},{"_id":"themes/aria/source/css/reward.styl","hash":"2e95f749d4750052c6a3b5cf79679c51453e7f2b","modified":1555982445185},{"_id":"themes/aria/source/css/sidebar.styl","hash":"7f62abecf246460d8debdb9c018086d66472672c","modified":1555982445187},{"_id":"themes/aria/source/css/solarized-dark.css","hash":"97bba4362e3001a93f1b111a140895cbe6047a81","modified":1555982445189},{"_id":"themes/aria/source/css/solarized-light.css","hash":"fe6779c179c3e6136384e463fdc6d3b08ff88ba7","modified":1555982445190},{"_id":"themes/aria/source/css/variables.styl","hash":"eb65f4b33bd8b2ec5dc256f1744e450384d4652e","modified":1555982445192},{"_id":"themes/aria/source/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1555982445195},{"_id":"themes/aria/source/fonts/lg.svg","hash":"1dba95664d2933fe1c22fb95a2e1e3a21839870b","modified":1555982445197},{"_id":"themes/aria/source/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1555982445201},{"_id":"themes/aria/source/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1555982445204},{"_id":"themes/aria/source/images/WeChatPay.png","hash":"ab7be92bf51a30826adeb4e0767c7c99ebdf172b","modified":1555982445207},{"_id":"themes/aria/source/images/avatar.png","hash":"ee31a019fd96f909af9eaa24bd5a61a8587ddef8","modified":1555982445209},{"_id":"themes/aria/source/images/logo.png","hash":"67ce91490bbe3fb41be589af15c2ecbd63b3791f","modified":1555982445215},{"_id":"themes/aria/source/js/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1555982445217},{"_id":"themes/aria/source/js/clipboard.min.js","hash":"dc144353ec85169bb3c5f3c6d68b4e75f9bf28ea","modified":1555982445219},{"_id":"themes/aria/source/js/commentjs.js","hash":"4a86e2daea116dc875445fe31815f0f43a8a7c78","modified":1555982445221},{"_id":"themes/aria/source/js/custom.js","hash":"4d04585e457716454ccb46843a7ff903981f7438","modified":1555982445223},{"_id":"themes/aria/source/js/highlight.min.js","hash":"a8442546e96c3c319f4298bfb2fab7060d389f50","modified":1555982445236},{"_id":"themes/aria/source/js/lg-fullscreen.min.js","hash":"70c5a8c3598c19af1a50a7e5d1567483fb63c3c5","modified":1555982445242},{"_id":"themes/aria/source/js/lg-hash.min.js","hash":"52c10707088f9fcbdef6a7974d31de2b6190a679","modified":1555982445244},{"_id":"themes/aria/source/js/lg-thumbnail.min.js","hash":"703c7d187625f4cf16891748250b00aeb6ca5479","modified":1555982445247},{"_id":"themes/aria/source/js/lg-pager.min.js","hash":"6f7572b2a27d1b4902eda27882c01e608ae59e06","modified":1555982445246},{"_id":"themes/aria/source/js/index.js","hash":"83f17690cf6be124187bbec321592b0b1d8062e0","modified":1555982445238},{"_id":"themes/aria/source/js/lg-zoom.min.js","hash":"8f22823a55f11dc651700f59318fffd65eb47692","modified":1555982445250},{"_id":"themes/aria/source/js/marked.min.js","hash":"00b4113ded8994ff7b495c36e013a19bc142375e","modified":1555982445254},{"_id":"themes/aria/source/js/scrollspy.js","hash":"2eafc89dae69269d6d4c47d7bd746e717bd38230","modified":1555982445256},{"_id":"themes/aria/source/js/timeago.min.js","hash":"d220fcc47be00effec6b5181b97cc0929d10031e","modified":1555982445261},{"_id":"themes/aria/source/js/util.js","hash":"bb56df6fc3768eb27d20ca7eab92c9654397d25e","modified":1555982445263},{"_id":"themes/aria/source/js/lightgallery.min.js","hash":"5fac1b0ebb11c99e2ac268b19ed172191e55d23d","modified":1555982445252},{"_id":"themes/aria/source/js/search.js","hash":"a38041aa761971a1cfe18bf6b6474e3d9412c065","modified":1555982445259},{"_id":"themes/aria/source/js/jquery.min.js","hash":"0c3192b500a4fd550e483cf77a49806a5872185b","modified":1555982445240},{"_id":"themes/aria/ARIA.png","hash":"4d9349d81236b2ad3384d92b5af789aafe71926e","modified":1555982445099},{"_id":"themes/aria/source/images/background.png","hash":"c34366140a0250afbd73d62abdc58b1e00e10355","modified":1555982445212},{"_id":"themes/aria/source/js/fontawesome-all.min.js","hash":"4dc5c54d10fc5c7eada0464e6060002a12859af7","modified":1555982445234},{"_id":"public/search.xml","hash":"a8e33841a48c74b3cbbe16d3974dadff42506593","modified":1555986760799},{"_id":"public/atom.xml","hash":"41900dbe06865fd661c2447cb1e132371e0f70c0","modified":1555986760811},{"_id":"public/categories/index.html","hash":"e923915d1bec4bf85ebb95d7c0f5d4e557f642a3","modified":1555986760830},{"_id":"public/hyperlink/index.html","hash":"02bc60119b9f69452d27a7d88f038520120b658e","modified":1555986760830},{"_id":"public/guessbook/index.html","hash":"caaadc099acead44c4c0c124539edb2ddcfd8773","modified":1555986760830},{"_id":"public/tags/index.html","hash":"7161d560c658f8761081ac5e172155e014fab95d","modified":1555986760830},{"_id":"public/categories/Linux/index.html","hash":"58a5727fdb7e29da5a2cca60b1ea6b64d44245cb","modified":1555986760830},{"_id":"public/categories/验证/index.html","hash":"471ada6cb8b28837a1c18a0dfdaf6d4f74ab93d5","modified":1555986760830},{"_id":"public/categories/验证/UVM-RAL/index.html","hash":"ff4994d89c2cce002dfd2655fe9d11a95fb62ac9","modified":1555986760831},{"_id":"public/categories/脚本/index.html","hash":"0f7c3c5df9ea5df209570b07d476adaf0b5a7ddb","modified":1555986760831},{"_id":"public/archives/page/2/index.html","hash":"8ed12fc3cd9d3f12736168a0e3ece692b2fb4ea2","modified":1555986760831},{"_id":"public/archives/2019/page/2/index.html","hash":"d0c7eda8c71bd60fa7941a8f57521abcfb7f7f08","modified":1555986760831},{"_id":"public/tags/Linux/index.html","hash":"77c3508bc2056268d47c95282511c5d3d6d072d5","modified":1555986760831},{"_id":"public/archives/2019/04/page/2/index.html","hash":"d0f2a28101ffb46e80190ee2eef19f0e86b2b246","modified":1555986760832},{"_id":"public/tags/shell/index.html","hash":"e25da14e256d51466a2c27d416f08382eb987420","modified":1555986760832},{"_id":"public/tags/UVM/index.html","hash":"50804e6226e517ed8640ae698fb5826e90f16b33","modified":1555986760832},{"_id":"public/tags/SystemVerilog/index.html","hash":"25d9333935dc476aa19daa889bf26768f2a8314e","modified":1555986760832},{"_id":"public/tags/RAL/index.html","hash":"f6c4f39caae1a919b126b988792b44f7846b0c9b","modified":1555986760832},{"_id":"public/tags/EDA/index.html","hash":"8938cd52a67dadf368696cb2f129f05d934b9f27","modified":1555986760832},{"_id":"public/tags/gdb/index.html","hash":"1418a620b4f7ba7a1079bddc013bfb62110a78a1","modified":1555986760832},{"_id":"public/tags/git/index.html","hash":"bcadb9e7b9443e09f40a3befe959fb44ecce6c80","modified":1555986760832},{"_id":"public/tags/github/index.html","hash":"c9cc7ac9bbb8650d38d4cd038ad6ea0265b0de65","modified":1555986760832},{"_id":"public/tags/synopsys/index.html","hash":"ad895fdd2d6d4d8876b26053edb7d62f94b80d7a","modified":1555986760833},{"_id":"public/tags/脚本/index.html","hash":"b35a425a61c33220c3b6e4142923e49fa088d3b1","modified":1555986760833},{"_id":"public/tags/FV/index.html","hash":"28a0ee5e05df5fa73f494407512d290c8d13a535","modified":1555986760833},{"_id":"public/tags/ABV/index.html","hash":"e953e2b0d2bdf8514683db9b44f3c8800a0c93a2","modified":1555986760833},{"_id":"public/2019/04/22/github回退代码到历史指定版本/index.html","hash":"b339c087ddf96a3c47017a5d26c4a02c465b5047","modified":1555986760833},{"_id":"public/2019/04/19/使用synopsys uvmgen快速生成uvm环境/index.html","hash":"5112c2a5d03d137649d063193c20fd45e96f799d","modified":1555986760833},{"_id":"public/2019/04/19/常用脚本收集/index.html","hash":"a279fe527d0e14d569e2e9b5c6193bf8d6a1f8d6","modified":1555986760833},{"_id":"public/2019/04/19/Layer-Sequence结构图/index.html","hash":"fde8a705beca01d7aa6d83e5800068da302ed6ca","modified":1555986760834},{"_id":"public/2019/04/19/Linux相关操作/index.html","hash":"6d73333c39b9e0af48c4ec414d165c5189553d03","modified":1555986760834},{"_id":"public/2019/04/18/VCS-Crash如何定位？/index.html","hash":"657b071b3fb928e0125f2a1ba0c0df5ac4673804","modified":1555986760834},{"_id":"public/2019/04/18/clocking块为什么能保证race-free/index.html","hash":"f02639842fc0f551cb85079ec4a8219b9e5c494f","modified":1555986760834},{"_id":"public/2019/04/18/UVM寄存器模型中soft和hard-reset有什么区别？/index.html","hash":"06429c461da1fd6ebe99ce60a728ba63e3dcf108","modified":1555986760834},{"_id":"public/2019/04/17/UVM-Register-Model/index.html","hash":"9838a332cb9d5c3e86990c906385e485050404e8","modified":1555986760835},{"_id":"public/2019/04/17/形式验证/index.html","hash":"b6622d990ca9b45af5e01bcb69739457af4aae55","modified":1555986760835},{"_id":"public/2019/04/16/QQ红包打赏,验证技术微信公众号，扫码即可，你的支持，就是技术的不断前进！/index.html","hash":"3311aae97f495d644256dec6092fc313c2145683","modified":1555986760835},{"_id":"public/index.html","hash":"557552343563c99f6ef16c3838719c42e4984520","modified":1555986760835},{"_id":"public/page/2/index.html","hash":"4d708d4fdad4ba4b4630ddc47f576bafdbb6ef95","modified":1555986760835},{"_id":"public/archives/index.html","hash":"24e7f4cd6c47a9d4ac917128995c36abd4740cea","modified":1555986760835},{"_id":"public/archives/2019/index.html","hash":"ec30f8a4ced3183965b5ecd1cda4e3369d5719e6","modified":1555986760835},{"_id":"public/2019/04/16/SystemVerilog语法释义/index.html","hash":"045abddcd14c175715bda5973cf6b130c6802755","modified":1555986760835},{"_id":"public/archives/2019/04/index.html","hash":"3967f873f733c16a0586e946046d9accbe44ccef","modified":1555986760835},{"_id":"public/lib/blog-encrypt.js","hash":"24b097141e36e24d93a30894eecb94307185141d","modified":1555986760836},{"_id":"public/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1555986760866},{"_id":"public/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1555986760866},{"_id":"public/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1555986760866},{"_id":"public/images/WeChatPay.png","hash":"ab7be92bf51a30826adeb4e0767c7c99ebdf172b","modified":1555986760866},{"_id":"public/images/logo.png","hash":"67ce91490bbe3fb41be589af15c2ecbd63b3791f","modified":1555986760866},{"_id":"public/fonts/lg.svg","hash":"1dba95664d2933fe1c22fb95a2e1e3a21839870b","modified":1555986760866},{"_id":"public/images/avatar.png","hash":"ee31a019fd96f909af9eaa24bd5a61a8587ddef8","modified":1555986760866},{"_id":"public/2019/04/19/使用synopsys uvmgen快速生成uvm环境/uvmgen1.png","hash":"080fe5351143c34ceeafdceced296f9d547786bf","modified":1555986762091},{"_id":"public/2019/04/19/使用synopsys uvmgen快速生成uvm环境/uvmgen2.png","hash":"c8cd870860bc1cdf781b85ec6c313b2b0062abe1","modified":1555986762091},{"_id":"public/css/blog-encrypt.css","hash":"b609ba95748409b03ef3386681d43bd1739399c8","modified":1555986762094},{"_id":"public/live2dw/assets/exp/f01.exp.json","hash":"84073a497ddb6e56c6cfc244a0fb217ba473abf9","modified":1555986762094},{"_id":"public/live2dw/assets/exp/f03.exp.json","hash":"fbf7729e504f14f83f976827fcf62301a6579a34","modified":1555986762094},{"_id":"public/live2dw/assets/exp/f04.exp.json","hash":"35e746ede62e7090e7dfb08561d77772f58b4153","modified":1555986762095},{"_id":"public/live2dw/assets/mtn/flickHead_02.mtn","hash":"d3c9c0acb4dc25a2274f3b9faa71e5ce60ad92e4","modified":1555986762095},{"_id":"public/live2dw/assets/mtn/flickHead_00.mtn","hash":"f64c79c9171660db5c440bef229ac2e35a1597d5","modified":1555986762095},{"_id":"public/live2dw/assets/mtn/flickHead_01.mtn","hash":"a1011d6bf397bcd3c3c968d9616f88fe1ffbc83c","modified":1555986762095},{"_id":"public/live2dw/assets/mtn/idle_00.mtn","hash":"378b4577217c604c9d28ab4edf8b707c8d8c2fbb","modified":1555986762095},{"_id":"public/live2dw/assets/mtn/idle_02.mtn","hash":"7f5d2cf8706007c8659938eba132a68c470a4c26","modified":1555986762095},{"_id":"public/live2dw/assets/mtn/idle_01.mtn","hash":"88c2494655dbb712b842f03232b619f381753d52","modified":1555986762095},{"_id":"public/live2dw/assets/exp/f02.exp.json","hash":"241b6afafa2e25c6d7a54692a8b5aa060a137ab1","modified":1555986762096},{"_id":"public/live2dw/assets/mtn/pinchIn_00.mtn","hash":"70978b4c983f6a9fd6d3d9c24571586f7d6eac30","modified":1555986762096},{"_id":"public/live2dw/assets/mtn/pinchOut_00.mtn","hash":"e07fe8fd8c2810e3c1d28b730bd49c8c25849bad","modified":1555986762096},{"_id":"public/live2dw/assets/mtn/pinchIn_01.mtn","hash":"a5fefb45115695db72b9499e627a51b2b9394f2c","modified":1555986762096},{"_id":"public/live2dw/assets/mtn/pinchOut_01.mtn","hash":"e05df948d08b17f34c993a9c1f901190509d5db0","modified":1555986762096},{"_id":"public/live2dw/assets/mtn/pinchIn_02.mtn","hash":"aa0d66ca9b06c374577fd7e64e89756de1e1f2ae","modified":1555986762096},{"_id":"public/live2dw/assets/mtn/pinchOut_02.mtn","hash":"b323fd350d334b33bbdfb31194ae664089986c27","modified":1555986762096},{"_id":"public/live2dw/assets/mtn/shake_00.mtn","hash":"5185d02c7ab9f0bec3d4a890b54b2378e553373d","modified":1555986762096},{"_id":"public/live2dw/assets/mtn/shake_01.mtn","hash":"e812985a56796e122018f9d57d1606a4866ff7d1","modified":1555986762096},{"_id":"public/live2dw/assets/mtn/tapBody_00.mtn","hash":"835aa3d4a8fbd26c0bb66b164a19464fa3f17a99","modified":1555986762096},{"_id":"public/live2dw/assets/mtn/tapBody_02.mtn","hash":"a75acb51c1191ce5050d3ee1af6f2dcc787c7c5e","modified":1555986762096},{"_id":"public/live2dw/assets/mtn/shake_02.mtn","hash":"2702970805e07777974c383613e631730982bcff","modified":1555986762097},{"_id":"public/live2dw/assets/mtn/tapBody_01.mtn","hash":"78fca17436ab5e065e27f419f135aa6c0a0b52ef","modified":1555986762097},{"_id":"public/live2dw/assets/shizuku.model.json","hash":"19a05bd41b806a935cea42c2000626fc82da2536","modified":1555986762097},{"_id":"public/live2dw/assets/shizuku.physics.json","hash":"6484d646e79a44c83784c6ae434cf7349746c5c8","modified":1555986762097},{"_id":"public/live2dw/assets/snd/flickHead_00.mp3","hash":"356388d939006b03cf9e6158c603b58d4800bec1","modified":1555986762097},{"_id":"public/live2dw/assets/snd/flickHead_01.mp3","hash":"436d0bbccf6e7a2744447554947eee4563608970","modified":1555986762097},{"_id":"public/live2dw/assets/snd/flickHead_02.mp3","hash":"5f63477ce63f2073e24d68fea906fe136fe6349e","modified":1555986762097},{"_id":"public/live2dw/assets/snd/pinchIn_00.mp3","hash":"f9baa3b7cadec20b714135fc49cfab3ff6adeeb4","modified":1555986762097},{"_id":"public/live2dw/assets/snd/pinchIn_01.mp3","hash":"d5c8cc6f61b56222a83a5174f75006f83c3b88da","modified":1555986762097},{"_id":"public/live2dw/assets/snd/shake_00.mp3","hash":"f65dd58e7b44ec5c865d13c190316070b625b5fe","modified":1555986762097},{"_id":"public/live2dw/assets/snd/shake_02.mp3","hash":"8882b94bce00f09232588b7301badb105fa8acab","modified":1555986762097},{"_id":"public/live2dw/assets/snd/shake_01.mp3","hash":"c1e0e8a07ff268ee06c2b7825d1b645e193f21b9","modified":1555986762098},{"_id":"public/live2dw/assets/snd/tapBody_00.mp3","hash":"003e68a59a9c8392e230f34c91860efbd946277a","modified":1555986762098},{"_id":"public/live2dw/assets/snd/tapBody_01.mp3","hash":"5314b50f153df71559e51e2586581c006df00722","modified":1555986762098},{"_id":"public/live2dw/assets/snd/tapBody_02.mp3","hash":"15e7815ed0a0e5164e18e0c53b97aedc742a134d","modified":1555986762098},{"_id":"public/live2dw/lib/L2Dwidget.min.js","hash":"77b9cffc61987bd179b7ba289eb1e5296d8ef345","modified":1555986762098},{"_id":"public/live2dw/assets/shizuku.pose.json","hash":"ac5505efbf80ba0a2e5783d67fe232bc5c6f1f80","modified":1555986762098},{"_id":"public/css/atom-one-dark.css","hash":"a6d28e1c04cee20cd874fc7ac0903d8e2e4bd54e","modified":1555986762107},{"_id":"public/css/atom-one-light.css","hash":"13e7620fe2842fa91cb309391a0b01a0c8712f12","modified":1555986762107},{"_id":"public/css/commentjs.css","hash":"d00731f87a5946fe70c893ba52ccc2b29c1f7ae6","modified":1555986762111},{"_id":"public/css/comment.css","hash":"167aa274488ac5ce8b70ae9e3bbb4273d1b300fa","modified":1555986762111},{"_id":"public/css/footer.css","hash":"d8607ae9fa69b6d24f9245153a7cc1b12b38c20b","modified":1555986762111},{"_id":"public/css/custom.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1555986762111},{"_id":"public/css/header.css","hash":"ad08b16ba625075ae9cff4f19cef32ef0f2fb432","modified":1555986762111},{"_id":"public/css/normalize.css","hash":"734a72e6c28d4a3a870404fb4abf72723c754296","modified":1555986762111},{"_id":"public/css/main.css","hash":"f0ceb651fd0e93b77012e31c08e8e67f950d1aa3","modified":1555986762111},{"_id":"public/css/info.css","hash":"ac778ad846013100e29be192f1ad008de0e4c058","modified":1555986762111},{"_id":"public/css/post.css","hash":"bbe31bc54cda70466033bbd16728496a75fe6d3a","modified":1555986762112},{"_id":"public/css/page.css","hash":"54b17e0ef8efbcca9cdcd0124630b2206b02b513","modified":1555986762112},{"_id":"public/css/reward.css","hash":"67f442ef493d49dd2ca682992611408bae224506","modified":1555986762112},{"_id":"public/css/sidebar.css","hash":"e1874d4449e5d54df3c513b22e2df0e24d6ea861","modified":1555986762112},{"_id":"public/css/solarized-dark.css","hash":"d02fc2dcbeec4b7af2cadec4bbbfc5b016aed4c7","modified":1555986762112},{"_id":"public/css/solarized-light.css","hash":"6b70caf1e84d096b1bc6318d5dae78d69e5dd1d3","modified":1555986762112},{"_id":"public/css/variables.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1555986762112},{"_id":"public/css/nav.css","hash":"c0d2d727de09ca89abd037463b8e87710f949755","modified":1555986762112},{"_id":"public/js/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1555986762112},{"_id":"public/js/clipboard.min.js","hash":"ee60ca5ba9401456105ef703a98092369b579c80","modified":1555986762112},{"_id":"public/js/custom.js","hash":"7e3e36b3ba8de9c168fa50d4b77449d9865b011a","modified":1555986762112},{"_id":"public/js/lg-fullscreen.min.js","hash":"71cf4fbc9ebbc7ccf1c580cd0389f0a28df64bd6","modified":1555986762112},{"_id":"public/js/lg-hash.min.js","hash":"163a3eb6bdd227549bb7b5be61dffed36af474fa","modified":1555986762112},{"_id":"public/js/index.js","hash":"8984287c5a1492bcfcd12cb0aef79345fe4bb3fd","modified":1555986762112},{"_id":"public/js/lg-zoom.min.js","hash":"b26f6070ad290f937c49289bd52014677dd6073c","modified":1555986762112},{"_id":"public/js/marked.min.js","hash":"c9eb834a28665addef7e66ee1a787fa1cbbb43eb","modified":1555986762112},{"_id":"public/js/scrollspy.js","hash":"724f9a0e12bd5c6a9d8cbf299ef4255621433cbf","modified":1555986762112},{"_id":"public/js/timeago.min.js","hash":"d220fcc47be00effec6b5181b97cc0929d10031e","modified":1555986762112},{"_id":"public/js/lg-pager.min.js","hash":"c4f5c7d91c87761f1626ebb411e5ed6d456799f0","modified":1555986762112},{"_id":"public/css/lightgallery.min.css","hash":"9e76bdad163856774a96b1230a08dc506600a973","modified":1555986762112},{"_id":"public/css/index.css","hash":"8a812547e505e9e8ade6452747aae1e2791bf0c7","modified":1555986762112},{"_id":"public/js/commentjs.js","hash":"c60e44a9aa66628bfcc0912ee3a10469b3c2899b","modified":1555986762113},{"_id":"public/js/highlight.min.js","hash":"02bb4cdaf43c85b7ee4ef6ccf1f3fe8e82fd3ceb","modified":1555986762113},{"_id":"public/2019/04/19/Layer-Sequence结构图/Layer-Sequence结构图.png","hash":"e1730adba66bece584305cd1a4b2c9d506b51863","modified":1555986762113},{"_id":"public/2019/04/19/使用synopsys uvmgen快速生成uvm环境/uvmgen3.png","hash":"21552670e8ff408efd9056b7adb307545351c73a","modified":1555986762113},{"_id":"public/live2dw/assets/moc/shizuku.1024/texture_00.png","hash":"21bdb28b31783e23b26b3aa061e90be4088665aa","modified":1555986762113},{"_id":"public/live2dw/assets/moc/shizuku.1024/texture_03.png","hash":"07f568a2bb8045b6bdff7783fb4daf62c821f9ab","modified":1555986762113},{"_id":"public/live2dw/assets/moc/shizuku.1024/texture_05.png","hash":"0cd00007fb8bff62a2eb08e1d7c43abab8722224","modified":1555986762113},{"_id":"public/live2dw/assets/snd/pinchIn_02.mp3","hash":"5b63e02607571ac601c500995e836e6c861b1c62","modified":1555986762113},{"_id":"public/live2dw/assets/snd/pinchOut_00.mp3","hash":"0654f38f6e9fd623eaf8be11b5d58c9d12991949","modified":1555986762113},{"_id":"public/live2dw/assets/snd/pinchOut_01.mp3","hash":"8a081030fd53c07bffe3edd48f87a371ca77296b","modified":1555986762114},{"_id":"public/live2dw/assets/snd/pinchOut_02.mp3","hash":"554edb2f3838cbdc27d1a9c6b8a9cb6eb465cbdd","modified":1555986762114},{"_id":"public/live2dw/lib/L2Dwidget.min.js.map","hash":"3290fe2df45f065b51a1cd7b24ec325cbf9bb5ce","modified":1555986762114},{"_id":"public/js/util.js","hash":"f4d0034baaf346b532d1a1602c0b48963a018f23","modified":1555986762119},{"_id":"public/js/search.js","hash":"9ac9f869aa245a33f1bd72ea58c8168a2f0e9824","modified":1555986762119},{"_id":"public/js/lg-thumbnail.min.js","hash":"3f3024b3ff6a5266bd40ed890398d7f2393cd5a5","modified":1555986762119},{"_id":"public/js/lightgallery.min.js","hash":"c2101bab37ebcb47cc21a3b92611493a165e5a79","modified":1555986762119},{"_id":"public/js/jquery.min.js","hash":"0dc32db4aa9c5f03f3b38c47d883dbd4fed13aae","modified":1555986762119},{"_id":"public/js/fontawesome-all.min.js","hash":"d7ff2806086f5924e06910e90a79b44492b52450","modified":1555986762119},{"_id":"public/live2dw/assets/moc/shizuku.1024/texture_01.png","hash":"3d0e745f3e560071ee08beeecde186e5ea35d99e","modified":1555986762119},{"_id":"public/live2dw/assets/moc/shizuku.1024/texture_04.png","hash":"f764d594841905db8b2998dd61c329866125ad97","modified":1555986762120},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js","hash":"94121cfcd4d0911a8314ab98efa7440dbabafe37","modified":1555986762120},{"_id":"public/lib/crypto-js.js","hash":"ddacd177f23f65ff97b93b0417048f51928ee17e","modified":1555986762131},{"_id":"public/live2dw/assets/moc/shizuku.1024/texture_02.png","hash":"055eb2da9c13e9116be93a1e60c0ea2b660af864","modified":1555986762131},{"_id":"public/images/background.png","hash":"c34366140a0250afbd73d62abdc58b1e00e10355","modified":1555986762141},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js.map","hash":"35e71cc2a130199efb167b9a06939576602f0d75","modified":1555986762148},{"_id":"public/live2dw/assets/moc/shizuku.moc","hash":"c2670a0f75830edc89d7fe6d074de4ee67e8dc5d","modified":1555986762150}],"Category":[{"name":"Linux","_id":"cjut6caxi0004b0alq1sx83nq"},{"name":"验证","_id":"cjut6caxq0009b0alrhxum5rs"},{"name":"UVM-RAL","parent":"cjut6caxq0009b0alrhxum5rs","_id":"cjut6cay7000qb0albrlsbat7"},{"name":"脚本","_id":"cjut6cayb000wb0aljdrctedi"}],"Data":[],"Page":[{"title":"categories","date":"2019-04-18T01:15:37.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2019-04-18 09:15:37\ntype: \"categories\"\ncomments: false\n---\n","updated":"2019-04-23T01:20:45.081Z","path":"categories/index.html","layout":"page","_id":"cjut6caxa0000b0al1b7wa3po","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"有问必答","date":"2019-04-22T09:41:36.000Z","type":"guessbook","comments":1,"_content":"","source":"guessbook/index.md","raw":"---\ntitle: 有问必答\ndate: 2019-04-22 17:41:36\ntype: \"guessbook\"\ncomments: true\n---\n","updated":"2019-04-23T01:20:45.083Z","path":"guessbook/index.html","layout":"page","_id":"cjut6caxf0002b0alnqnaezif","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"常用技术链接","date":"2019-04-23T01:46:46.000Z","type":"hyperlink","comments":0,"_content":"\n* Git教程\n[https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000](https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000 \"Git教程\")\n* Python\n[https://www.python.org/](https://www.python.org/ \"Python\")\n* C++ 参考手册\n[https://zh.cppreference.com/w/%E9%A6%96%E9%A1%B5](https://zh.cppreference.com/w/%E9%A6%96%E9%A1%B5 \"C++ 参考手册\")\n* Cadence\n[https://www.cadence.com/](https://www.cadence.com/ \"Cadence\")\n* Synopsys\n[https://www.synopsys.com/](https://www.synopsys.com/ \"Synopsys\")\n* Mentor\n[https://www.mentor.com/](https://www.mentor.com/ \"Mentor\")\n* Accellera组织\n[https://accellera.org/](https://accellera.org/ \"Accellera\")","source":"hyperlink/index.md","raw":"---\ntitle: 常用技术链接\ndate: 2019-04-23 09:46:46\ntype: \"hyperlink\"\ncomments: false\n---\n\n* Git教程\n[https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000](https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000 \"Git教程\")\n* Python\n[https://www.python.org/](https://www.python.org/ \"Python\")\n* C++ 参考手册\n[https://zh.cppreference.com/w/%E9%A6%96%E9%A1%B5](https://zh.cppreference.com/w/%E9%A6%96%E9%A1%B5 \"C++ 参考手册\")\n* Cadence\n[https://www.cadence.com/](https://www.cadence.com/ \"Cadence\")\n* Synopsys\n[https://www.synopsys.com/](https://www.synopsys.com/ \"Synopsys\")\n* Mentor\n[https://www.mentor.com/](https://www.mentor.com/ \"Mentor\")\n* Accellera组织\n[https://accellera.org/](https://accellera.org/ \"Accellera\")","updated":"2019-04-23T02:06:00.550Z","path":"hyperlink/index.html","layout":"page","_id":"cjut6cayz001zb0alkzz60179","content":"<ul>\n<li>Git教程<br><a href=\"https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\" title=\"Git教程\" target=\"_blank\" rel=\"noopener\">https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000</a></li>\n<li>Python<br><a href=\"https://www.python.org/\" title=\"Python\" target=\"_blank\" rel=\"noopener\">https://www.python.org/</a></li>\n<li>C++ 参考手册<br><a href=\"https://zh.cppreference.com/w/%E9%A6%96%E9%A1%B5\" title=\"C++ 参考手册\" target=\"_blank\" rel=\"noopener\">https://zh.cppreference.com/w/%E9%A6%96%E9%A1%B5</a></li>\n<li>Cadence<br><a href=\"https://www.cadence.com/\" title=\"Cadence\" target=\"_blank\" rel=\"noopener\">https://www.cadence.com/</a></li>\n<li>Synopsys<br><a href=\"https://www.synopsys.com/\" title=\"Synopsys\" target=\"_blank\" rel=\"noopener\">https://www.synopsys.com/</a></li>\n<li>Mentor<br><a href=\"https://www.mentor.com/\" title=\"Mentor\" target=\"_blank\" rel=\"noopener\">https://www.mentor.com/</a></li>\n<li>Accellera组织<br><a href=\"https://accellera.org/\" title=\"Accellera\" target=\"_blank\" rel=\"noopener\">https://accellera.org/</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li>Git教程<br><a href=\"https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\" title=\"Git教程\" target=\"_blank\" rel=\"noopener\">https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000</a></li>\n<li>Python<br><a href=\"https://www.python.org/\" title=\"Python\" target=\"_blank\" rel=\"noopener\">https://www.python.org/</a></li>\n<li>C++ 参考手册<br><a href=\"https://zh.cppreference.com/w/%E9%A6%96%E9%A1%B5\" title=\"C++ 参考手册\" target=\"_blank\" rel=\"noopener\">https://zh.cppreference.com/w/%E9%A6%96%E9%A1%B5</a></li>\n<li>Cadence<br><a href=\"https://www.cadence.com/\" title=\"Cadence\" target=\"_blank\" rel=\"noopener\">https://www.cadence.com/</a></li>\n<li>Synopsys<br><a href=\"https://www.synopsys.com/\" title=\"Synopsys\" target=\"_blank\" rel=\"noopener\">https://www.synopsys.com/</a></li>\n<li>Mentor<br><a href=\"https://www.mentor.com/\" title=\"Mentor\" target=\"_blank\" rel=\"noopener\">https://www.mentor.com/</a></li>\n<li>Accellera组织<br><a href=\"https://accellera.org/\" title=\"Accellera\" target=\"_blank\" rel=\"noopener\">https://accellera.org/</a></li>\n</ul>\n"},{"title":"tags","date":"2019-04-18T01:15:22.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2019-04-18 09:15:22\ntype: \"tags\"\ncomments: false\n---\n","updated":"2019-04-23T01:20:45.087Z","path":"tags/index.html","layout":"page","_id":"cjut6caz10020b0al3t417rah","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Linux 查找指定名称的进程并显示进程详细信息","author":"神秘人","date":"2019-04-19T03:10:00.000Z","_content":"\n### 给定一个进程名称特征串，查找所有匹配该进程名称的进程的详细信息。\n\n<font color=blue>\n\n(1) 先用pgrep [str] 命令进行模糊匹配，找到匹配该特征串的进程ID；\n\n(2) 其次根据进程ID显示指定的进程信息，ps --pid [pid]；\n\n(3) 因为查找出来的进程ID需要被作为参数传递给ps命令，故使用xargs命令，通过管道符号连接；\n\n(4) 最后显示进程详细信息，需要加上-u参数。\n\n最终命令形如:\n\npgrep ncsim | xargs ps -u --pid\n</color>","source":"_posts/Linux相关操作.md","raw":"title: Linux 查找指定名称的进程并显示进程详细信息\nauthor: 神秘人\ntags:\n  - Linux\n  - shell\ncategories:\n  - Linux\ndate: 2019-04-19 11:10:00\n---\n\n### 给定一个进程名称特征串，查找所有匹配该进程名称的进程的详细信息。\n\n<font color=blue>\n\n(1) 先用pgrep [str] 命令进行模糊匹配，找到匹配该特征串的进程ID；\n\n(2) 其次根据进程ID显示指定的进程信息，ps --pid [pid]；\n\n(3) 因为查找出来的进程ID需要被作为参数传递给ps命令，故使用xargs命令，通过管道符号连接；\n\n(4) 最后显示进程详细信息，需要加上-u参数。\n\n最终命令形如:\n\npgrep ncsim | xargs ps -u --pid\n</color>","slug":"Linux相关操作","published":1,"updated":"2019-04-23T01:20:45.051Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjut6caxb0001b0alihvhavii","content":"<h3 id=\"给定一个进程名称特征串，查找所有匹配该进程名称的进程的详细信息。\"><a href=\"#给定一个进程名称特征串，查找所有匹配该进程名称的进程的详细信息。\" class=\"headerlink\" title=\"给定一个进程名称特征串，查找所有匹配该进程名称的进程的详细信息。\"></a>给定一个进程名称特征串，查找所有匹配该进程名称的进程的详细信息。</h3><font color=\"blue\">\n\n<p>(1) 先用pgrep [str] 命令进行模糊匹配，找到匹配该特征串的进程ID；</p>\n<p>(2) 其次根据进程ID显示指定的进程信息，ps –pid [pid]；</p>\n<p>(3) 因为查找出来的进程ID需要被作为参数传递给ps命令，故使用xargs命令，通过管道符号连接；</p>\n<p>(4) 最后显示进程详细信息，需要加上-u参数。</p>\n<p>最终命令形如:</p>\n<p>pgrep ncsim | xargs ps -u –pid<br></p>\n</font>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"给定一个进程名称特征串，查找所有匹配该进程名称的进程的详细信息。\"><a href=\"#给定一个进程名称特征串，查找所有匹配该进程名称的进程的详细信息。\" class=\"headerlink\" title=\"给定一个进程名称特征串，查找所有匹配该进程名称的进程的详细信息。\"></a>给定一个进程名称特征串，查找所有匹配该进程名称的进程的详细信息。</h3><font color=\"blue\">\n\n<p>(1) 先用pgrep [str] 命令进行模糊匹配，找到匹配该特征串的进程ID；</p>\n<p>(2) 其次根据进程ID显示指定的进程信息，ps –pid [pid]；</p>\n<p>(3) 因为查找出来的进程ID需要被作为参数传递给ps命令，故使用xargs命令，通过管道符号连接；</p>\n<p>(4) 最后显示进程详细信息，需要加上-u参数。</p>\n<p>最终命令形如:</p>\n<p>pgrep ncsim | xargs ps -u –pid<br></p>\n</font>"},{"title":"Layer-Sequence结构图","author":"神秘人","date":"2019-04-19T06:53:55.000Z","_content":"### UVM Layer Sequence结构图\n\n![Layer-Sequence结构图](Layer-Sequence结构图/Layer-Sequence结构图.png)\n<font color=blue>\n\n 1.可以1:1，1：N，N:N进行堆叠。\n \n 2.堆叠指针必须指向对应的sequencer。\n\n</font>","source":"_posts/Layer-Sequence结构图.md","raw":"title: Layer-Sequence结构图\nauthor: 神秘人\ndate: 2019-04-19 14:53:55\ntags: [UVM,SystemVerilog]\ncategories: [ 验证]\n---\n### UVM Layer Sequence结构图\n\n![Layer-Sequence结构图](Layer-Sequence结构图/Layer-Sequence结构图.png)\n<font color=blue>\n\n 1.可以1:1，1：N，N:N进行堆叠。\n \n 2.堆叠指针必须指向对应的sequencer。\n\n</font>","slug":"Layer-Sequence结构图","published":1,"updated":"2019-04-23T01:20:45.044Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjut6caxg0003b0aly2o5vtkn","content":"<h3 id=\"UVM-Layer-Sequence结构图\"><a href=\"#UVM-Layer-Sequence结构图\" class=\"headerlink\" title=\"UVM Layer Sequence结构图\"></a>UVM Layer Sequence结构图</h3><p><img src=\"/2019/04/19/Layer-Sequence结构图/Layer-Sequence结构图.png\" alt=\"Layer-Sequence结构图\"></p>\n<font color=\"blue\"><br><br> 1.可以1:1，1：N，N:N进行堆叠。<br><br> 2.堆叠指针必须指向对应的sequencer。<br><br></font>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"UVM-Layer-Sequence结构图\"><a href=\"#UVM-Layer-Sequence结构图\" class=\"headerlink\" title=\"UVM Layer Sequence结构图\"></a>UVM Layer Sequence结构图</h3><p><img src=\"/2019/04/19/Layer-Sequence结构图/Layer-Sequence结构图.png\" alt=\"Layer-Sequence结构图\"></p>\n<font color=\"blue\"><br><br> 1.可以1:1，1：N，N:N进行堆叠。<br><br> 2.堆叠指针必须指向对应的sequencer。<br><br></font>"},{"title":"SystemVerilog语法释义","date":"2019-04-16T08:08:43.000Z","_content":"## 1.浮点数转换\n\n### ieee1800-2017解释：\n\n\tReal numbers shall be converted to integers by rounding the real number to the nearest integer, rather than by truncating it. \n\tImplicit conversion shall take place when a real number is assigned to an integer. \n\tIf the fractional part of the real number is exactly 0.5, it shall be rounded away from zero.\n\t\n<font color=blue>\n代码例子：\n<pre name=\"code\" class=\"systemverilog\">     \t\nint x_int;\t\nx_int = 2.4;//x_int --> 2\nx_int = 2.5;//x_int --> 3\nx_int = int'(2.5);//x_int --> 2 \n</pre>   \n</font> \n\n## 2.数据比特位快速反转\n<font color=blue>\n代码例子：\n<pre name=\"code\" class=\"systemverilog\">  \t\nbit [15:0] x = 16'b0000_1011_0000_0011;\nx= { << {x} }; //x --> 16'b1100_0000_1101_0000;\n</pre>\n</font> \n\n## 3.super.super如何解决无法支持问题？\n<font color=blue>\n代码例子：\n<pre name=\"code\" class=\"systemverilog\">  \t\nmodule tb;\n\nclass A;\n    virtual function void test();\n        $display(\"%m\");\n    endfunction\nendclass\n\nclass B extends A;\n    virtual function void test();\n        $display(\"%m\");\n    endfunction\nendclass\n\nclass C extends B;\n    virtual function void test();\n        super.test();//Call B test()\n        //super.super.test();//error!Can not support！\n        //use follow\n        A::test();//Call A test()\n        $display(\"%m\");\n    endfunction\nendclass\n\ninitial begin\n    C cinst = new();\n    cinst.test();\nend\n\nendmodule\n\n仿真执行结果：\ntb.B.test\ntb.A.test\ntb.C.test\n\n</pre>\n</font> ","source":"_posts/SystemVerilog语法释义.md","raw":"---\ntitle: SystemVerilog语法释义\ndate: 2019-04-16 16:08:43\ntags: [UVM,SystemVerilog]\ncategories: 验证\n---\n## 1.浮点数转换\n\n### ieee1800-2017解释：\n\n\tReal numbers shall be converted to integers by rounding the real number to the nearest integer, rather than by truncating it. \n\tImplicit conversion shall take place when a real number is assigned to an integer. \n\tIf the fractional part of the real number is exactly 0.5, it shall be rounded away from zero.\n\t\n<font color=blue>\n代码例子：\n<pre name=\"code\" class=\"systemverilog\">     \t\nint x_int;\t\nx_int = 2.4;//x_int --> 2\nx_int = 2.5;//x_int --> 3\nx_int = int'(2.5);//x_int --> 2 \n</pre>   \n</font> \n\n## 2.数据比特位快速反转\n<font color=blue>\n代码例子：\n<pre name=\"code\" class=\"systemverilog\">  \t\nbit [15:0] x = 16'b0000_1011_0000_0011;\nx= { << {x} }; //x --> 16'b1100_0000_1101_0000;\n</pre>\n</font> \n\n## 3.super.super如何解决无法支持问题？\n<font color=blue>\n代码例子：\n<pre name=\"code\" class=\"systemverilog\">  \t\nmodule tb;\n\nclass A;\n    virtual function void test();\n        $display(\"%m\");\n    endfunction\nendclass\n\nclass B extends A;\n    virtual function void test();\n        $display(\"%m\");\n    endfunction\nendclass\n\nclass C extends B;\n    virtual function void test();\n        super.test();//Call B test()\n        //super.super.test();//error!Can not support！\n        //use follow\n        A::test();//Call A test()\n        $display(\"%m\");\n    endfunction\nendclass\n\ninitial begin\n    C cinst = new();\n    cinst.test();\nend\n\nendmodule\n\n仿真执行结果：\ntb.B.test\ntb.A.test\ntb.C.test\n\n</pre>\n</font> ","slug":"SystemVerilog语法释义","published":1,"updated":"2019-04-23T01:20:45.056Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjut6caxk0006b0alykw7qybs","content":"<h2 id=\"1-浮点数转换\"><a href=\"#1-浮点数转换\" class=\"headerlink\" title=\"1.浮点数转换\"></a>1.浮点数转换</h2><h3 id=\"ieee1800-2017解释：\"><a href=\"#ieee1800-2017解释：\" class=\"headerlink\" title=\"ieee1800-2017解释：\"></a>ieee1800-2017解释：</h3><pre><code>Real numbers shall be converted to integers by rounding the real number to the nearest integer, rather than by truncating it. \nImplicit conversion shall take place when a real number is assigned to an integer. \nIf the fractional part of the real number is exactly 0.5, it shall be rounded away from zero.\n</code></pre><font color=\"blue\"><br>代码例子：<br><pre name=\"code\" class=\"systemverilog\"><br>int x_int;<br>x_int = 2.4;//x_int –&gt; 2<br>x_int = 2.5;//x_int –&gt; 3<br>x_int = int’(2.5);//x_int –&gt; 2<br></pre><br></font> \n\n<h2 id=\"2-数据比特位快速反转\"><a href=\"#2-数据比特位快速反转\" class=\"headerlink\" title=\"2.数据比特位快速反转\"></a>2.数据比特位快速反转</h2><font color=\"blue\"><br>代码例子：<br><pre name=\"code\" class=\"systemverilog\"><br>bit [15:0] x = 16’b0000_1011_0000_0011;<br>x= { &lt;&lt; {x} }; //x –&gt; 16’b1100_0000_1101_0000;<br></pre><br></font> \n\n<h2 id=\"3-super-super如何解决无法支持问题？\"><a href=\"#3-super-super如何解决无法支持问题？\" class=\"headerlink\" title=\"3.super.super如何解决无法支持问题？\"></a>3.super.super如何解决无法支持问题？</h2><font color=\"blue\"><br>代码例子：<br><pre name=\"code\" class=\"systemverilog\"><br>module tb;<br><br>class A;<br>    virtual function void test();<br>        $display(“%m”);<br>    endfunction<br>endclass<br><br>class B extends A;<br>    virtual function void test();<br>        $display(“%m”);<br>    endfunction<br>endclass<br><br>class C extends B;<br>    virtual function void test();<br>        super.test();//Call B test()<br>        //super.super.test();//error!Can not support！<br>        //use follow<br>        A::test();//Call A test()<br>        $display(“%m”);<br>    endfunction<br>endclass<br><br>initial begin<br>    C cinst = new();<br>    cinst.test();<br>end<br><br>endmodule<br><br>仿真执行结果：<br>tb.B.test<br>tb.A.test<br>tb.C.test<br><br></pre><br></font> ","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-浮点数转换\"><a href=\"#1-浮点数转换\" class=\"headerlink\" title=\"1.浮点数转换\"></a>1.浮点数转换</h2><h3 id=\"ieee1800-2017解释：\"><a href=\"#ieee1800-2017解释：\" class=\"headerlink\" title=\"ieee1800-2017解释：\"></a>ieee1800-2017解释：</h3><pre><code>Real numbers shall be converted to integers by rounding the real number to the nearest integer, rather than by truncating it. \nImplicit conversion shall take place when a real number is assigned to an integer. \nIf the fractional part of the real number is exactly 0.5, it shall be rounded away from zero.\n</code></pre><font color=\"blue\"><br>代码例子：<br><pre name=\"code\" class=\"systemverilog\"><br>int x_int;<br>x_int = 2.4;//x_int –&gt; 2<br>x_int = 2.5;//x_int –&gt; 3<br>x_int = int’(2.5);//x_int –&gt; 2<br></pre><br></font> \n\n<h2 id=\"2-数据比特位快速反转\"><a href=\"#2-数据比特位快速反转\" class=\"headerlink\" title=\"2.数据比特位快速反转\"></a>2.数据比特位快速反转</h2><font color=\"blue\"><br>代码例子：<br><pre name=\"code\" class=\"systemverilog\"><br>bit [15:0] x = 16’b0000_1011_0000_0011;<br>x= { &lt;&lt; {x} }; //x –&gt; 16’b1100_0000_1101_0000;<br></pre><br></font> \n\n<h2 id=\"3-super-super如何解决无法支持问题？\"><a href=\"#3-super-super如何解决无法支持问题？\" class=\"headerlink\" title=\"3.super.super如何解决无法支持问题？\"></a>3.super.super如何解决无法支持问题？</h2><font color=\"blue\"><br>代码例子：<br><pre name=\"code\" class=\"systemverilog\"><br>module tb;<br><br>class A;<br>    virtual function void test();<br>        $display(“%m”);<br>    endfunction<br>endclass<br><br>class B extends A;<br>    virtual function void test();<br>        $display(“%m”);<br>    endfunction<br>endclass<br><br>class C extends B;<br>    virtual function void test();<br>        super.test();//Call B test()<br>        //super.super.test();//error!Can not support！<br>        //use follow<br>        A::test();//Call A test()<br>        $display(“%m”);<br>    endfunction<br>endclass<br><br>initial begin<br>    C cinst = new();<br>    cinst.test();<br>end<br><br>endmodule<br><br>仿真执行结果：<br>tb.B.test<br>tb.A.test<br>tb.C.test<br><br></pre><br></font> "},{"title":"QQ红包打赏,验证技术微信公众号，扫码即可，你的支持，就是技术的不断前进！","date":"2019-04-16T08:52:08.000Z","_content":"# 谢谢打赏 #\n![QQ](https://github.com/275244143/picBed/blob/master/QQ%E5%9B%BE%E7%89%8720190416222833.png?raw=true)\n# 验证技术公众号（Ricky友情支持） #\n![WEBCHAT](https://github.com/275244143/picBed/blob/master/QQ%E5%9B%BE%E7%89%8720190416224606.jpg?raw=true)\n\n","source":"_posts/QQ红包打赏,验证技术微信公众号，扫码即可，你的支持，就是技术的不断前进！.md","raw":"---\ntitle: QQ红包打赏,验证技术微信公众号，扫码即可，你的支持，就是技术的不断前进！\ndate: 2019-04-16 16:52:08\ntags:\n---\n# 谢谢打赏 #\n![QQ](https://github.com/275244143/picBed/blob/master/QQ%E5%9B%BE%E7%89%8720190416222833.png?raw=true)\n# 验证技术公众号（Ricky友情支持） #\n![WEBCHAT](https://github.com/275244143/picBed/blob/master/QQ%E5%9B%BE%E7%89%8720190416224606.jpg?raw=true)\n\n","slug":"QQ红包打赏,验证技术微信公众号，扫码即可，你的支持，就是技术的不断前进！","published":1,"updated":"2019-04-23T01:20:45.053Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjut6caxm0007b0al9zlyk2sc","content":"<h1 id=\"谢谢打赏\"><a href=\"#谢谢打赏\" class=\"headerlink\" title=\"谢谢打赏\"></a>谢谢打赏</h1><p><img src=\"https://github.com/275244143/picBed/blob/master/QQ%E5%9B%BE%E7%89%8720190416222833.png?raw=true\" alt=\"QQ\"></p>\n<h1 id=\"验证技术公众号（Ricky友情支持）\"><a href=\"#验证技术公众号（Ricky友情支持）\" class=\"headerlink\" title=\"验证技术公众号（Ricky友情支持）\"></a>验证技术公众号（Ricky友情支持）</h1><p><img src=\"https://github.com/275244143/picBed/blob/master/QQ%E5%9B%BE%E7%89%8720190416224606.jpg?raw=true\" alt=\"WEBCHAT\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"谢谢打赏\"><a href=\"#谢谢打赏\" class=\"headerlink\" title=\"谢谢打赏\"></a>谢谢打赏</h1><p><img src=\"https://github.com/275244143/picBed/blob/master/QQ%E5%9B%BE%E7%89%8720190416222833.png?raw=true\" alt=\"QQ\"></p>\n<h1 id=\"验证技术公众号（Ricky友情支持）\"><a href=\"#验证技术公众号（Ricky友情支持）\" class=\"headerlink\" title=\"验证技术公众号（Ricky友情支持）\"></a>验证技术公众号（Ricky友情支持）</h1><p><img src=\"https://github.com/275244143/picBed/blob/master/QQ%E5%9B%BE%E7%89%8720190416224606.jpg?raw=true\" alt=\"WEBCHAT\"></p>\n"},{"title":"UVM-Register-Model","date":"2019-04-17T06:03:12.000Z","_content":"# 1.UVM寄存器模型相关操作引起的一些关键变化 #\n# **缩写词** #\nUMV –  Update Main Variable,  \nUMrV – Update Mirror Variable,  \nAP – Auto predict\nRDR – Read DUT Register,  \nUDR – Update DUT Register,  \nRMV – Read Main Variable\nFD – frontdoor,   \nBD – Backdoor,   *  – check if UVM_CHEK is used,   NA – Not Applicable*\n\n![](https://github.com/275244143/picBed/blob/master/uvm-reg-access.jpg?raw=true)\n","source":"_posts/UVM-Register-Model.md","raw":"---\ntitle: UVM-Register-Model\ndate: 2019-04-17 14:03:12\ntags: [UVM,SystemVerilog]\ncategories: 验证\n---\n# 1.UVM寄存器模型相关操作引起的一些关键变化 #\n# **缩写词** #\nUMV –  Update Main Variable,  \nUMrV – Update Mirror Variable,  \nAP – Auto predict\nRDR – Read DUT Register,  \nUDR – Update DUT Register,  \nRMV – Read Main Variable\nFD – frontdoor,   \nBD – Backdoor,   *  – check if UVM_CHEK is used,   NA – Not Applicable*\n\n![](https://github.com/275244143/picBed/blob/master/uvm-reg-access.jpg?raw=true)\n","slug":"UVM-Register-Model","published":1,"updated":"2019-04-23T01:20:45.057Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjut6caxp0008b0al0u8w2yqd","content":"<h1 id=\"1-UVM寄存器模型相关操作引起的一些关键变化\"><a href=\"#1-UVM寄存器模型相关操作引起的一些关键变化\" class=\"headerlink\" title=\"1.UVM寄存器模型相关操作引起的一些关键变化\"></a>1.UVM寄存器模型相关操作引起的一些关键变化</h1><h1 id=\"缩写词\"><a href=\"#缩写词\" class=\"headerlink\" title=\"缩写词\"></a><strong>缩写词</strong></h1><p>UMV –  Update Main Variable,<br>UMrV – Update Mirror Variable,<br>AP – Auto predict<br>RDR – Read DUT Register,<br>UDR – Update DUT Register,<br>RMV – Read Main Variable<br>FD – frontdoor,<br>BD – Backdoor,   <em>  – check if UVM_CHEK is used,   NA – Not Applicable</em></p>\n<p><img src=\"https://github.com/275244143/picBed/blob/master/uvm-reg-access.jpg?raw=true\" alt></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"1-UVM寄存器模型相关操作引起的一些关键变化\"><a href=\"#1-UVM寄存器模型相关操作引起的一些关键变化\" class=\"headerlink\" title=\"1.UVM寄存器模型相关操作引起的一些关键变化\"></a>1.UVM寄存器模型相关操作引起的一些关键变化</h1><h1 id=\"缩写词\"><a href=\"#缩写词\" class=\"headerlink\" title=\"缩写词\"></a><strong>缩写词</strong></h1><p>UMV –  Update Main Variable,<br>UMrV – Update Mirror Variable,<br>AP – Auto predict<br>RDR – Read DUT Register,<br>UDR – Update DUT Register,<br>RMV – Read Main Variable<br>FD – frontdoor,<br>BD – Backdoor,   <em>  – check if UVM_CHEK is used,   NA – Not Applicable</em></p>\n<p><img src=\"https://github.com/275244143/picBed/blob/master/uvm-reg-access.jpg?raw=true\" alt></p>\n"},{"title":"UVM寄存器模型中soft和hard reset有什么区别？","date":"2019-04-18T01:39:46.000Z","_content":"## 1.Kind = \"HARD\" or \"SOFT\"\n寄存器模型中复位操作这个到底有什么作用呢？源码如下：\n\n<font color=red>\n代码例子：\n<pre name=\"code\" class=\"systemverilog\">  \t\nfunction void uvm_reg_xxx::reset(string kind = \"HARD\");\n\tif (!m_reset.exists(kind))\n  \t\treturn;\n\tm_mirrored = m_reset[kind];\n\tm_desired  = m_mirrored;\n\tvalue      = m_mirrored;\n\tif (kind == \"HARD\")\n\t\tm_written  = 0;\nendfunction: reset\n</pre>\n</font> \n<font color=blue>\n其实是作为特别处理用的，如果所有的寄存器都只有一个复位的时候默认一个HARD值统一复位。\n如果某个寄存器需要特殊的复位，则可以重写该类中的reset（…）方法：\n代码例子：\n<pre name=\"code\" class=\"systemverilog\">  \t\t\nclass some_reg extends uvm_reg;\n    ...\n\tfunction void reset(string kind = \"HARD\");\n\t\tif (kind != \"SOFT\")\n\t\t\tsuper.reset(kind);\n\tendfunction\n\nendclass\n</pre>   \n</font> \n","source":"_posts/UVM寄存器模型中soft和hard-reset有什么区别？.md","raw":"---\ntitle: UVM寄存器模型中soft和hard reset有什么区别？\ndate: 2019-04-18 09:39:46\ntags: [UVM,SystemVerilog,RAL]\ncategories: [验证,UVM-RAL]\n---\n## 1.Kind = \"HARD\" or \"SOFT\"\n寄存器模型中复位操作这个到底有什么作用呢？源码如下：\n\n<font color=red>\n代码例子：\n<pre name=\"code\" class=\"systemverilog\">  \t\nfunction void uvm_reg_xxx::reset(string kind = \"HARD\");\n\tif (!m_reset.exists(kind))\n  \t\treturn;\n\tm_mirrored = m_reset[kind];\n\tm_desired  = m_mirrored;\n\tvalue      = m_mirrored;\n\tif (kind == \"HARD\")\n\t\tm_written  = 0;\nendfunction: reset\n</pre>\n</font> \n<font color=blue>\n其实是作为特别处理用的，如果所有的寄存器都只有一个复位的时候默认一个HARD值统一复位。\n如果某个寄存器需要特殊的复位，则可以重写该类中的reset（…）方法：\n代码例子：\n<pre name=\"code\" class=\"systemverilog\">  \t\t\nclass some_reg extends uvm_reg;\n    ...\n\tfunction void reset(string kind = \"HARD\");\n\t\tif (kind != \"SOFT\")\n\t\t\tsuper.reset(kind);\n\tendfunction\n\nendclass\n</pre>   \n</font> \n","slug":"UVM寄存器模型中soft和hard-reset有什么区别？","published":1,"updated":"2019-04-23T01:20:45.059Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjut6caxr000bb0al9uymbup6","content":"<h2 id=\"1-Kind-“HARD”-or-“SOFT”\"><a href=\"#1-Kind-“HARD”-or-“SOFT”\" class=\"headerlink\" title=\"1.Kind = “HARD” or “SOFT”\"></a>1.Kind = “HARD” or “SOFT”</h2><p>寄存器模型中复位操作这个到底有什么作用呢？源码如下：</p>\n<font color=\"red\"><br>代码例子：<br><pre name=\"code\" class=\"systemverilog\"><br>function void uvm_reg_xxx::reset(string kind = “HARD”);<br>    if (!m_reset.exists(kind))<br>          return;<br>    m_mirrored = m_reset[kind];<br>    m_desired  = m_mirrored;<br>    value      = m_mirrored;<br>    if (kind == “HARD”)<br>        m_written  = 0;<br>endfunction: reset<br></pre><br></font><br><font color=\"blue\"><br>其实是作为特别处理用的，如果所有的寄存器都只有一个复位的时候默认一个HARD值统一复位。<br>如果某个寄存器需要特殊的复位，则可以重写该类中的reset（…）方法：<br>代码例子：<br><pre name=\"code\" class=\"systemverilog\"><br>class some_reg extends uvm_reg;<br>    …<br>    function void reset(string kind = “HARD”);<br>        if (kind != “SOFT”)<br>            super.reset(kind);<br>    endfunction<br><br>endclass<br></pre><br></font> \n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-Kind-“HARD”-or-“SOFT”\"><a href=\"#1-Kind-“HARD”-or-“SOFT”\" class=\"headerlink\" title=\"1.Kind = “HARD” or “SOFT”\"></a>1.Kind = “HARD” or “SOFT”</h2><p>寄存器模型中复位操作这个到底有什么作用呢？源码如下：</p>\n<font color=\"red\"><br>代码例子：<br><pre name=\"code\" class=\"systemverilog\"><br>function void uvm_reg_xxx::reset(string kind = “HARD”);<br>    if (!m_reset.exists(kind))<br>          return;<br>    m_mirrored = m_reset[kind];<br>    m_desired  = m_mirrored;<br>    value      = m_mirrored;<br>    if (kind == “HARD”)<br>        m_written  = 0;<br>endfunction: reset<br></pre><br></font><br><font color=\"blue\"><br>其实是作为特别处理用的，如果所有的寄存器都只有一个复位的时候默认一个HARD值统一复位。<br>如果某个寄存器需要特殊的复位，则可以重写该类中的reset（…）方法：<br>代码例子：<br><pre name=\"code\" class=\"systemverilog\"><br>class some_reg extends uvm_reg;<br>    …<br>    function void reset(string kind = “HARD”);<br>        if (kind != “SOFT”)<br>            super.reset(kind);<br>    endfunction<br><br>endclass<br></pre><br></font> \n"},{"title":"VCS Crash如何定位？","date":"2019-04-18T14:37:37.000Z","password":888888,"abstract":"欢迎光临~","message":"~友情QQ红包，发送密码~","_content":"\n\n<font color=red>\n# 编译时Crash,按照如下步骤定位： #\n\n1.vcs -gdb [options]\n\n2.run\n\n3.where\n</font> \n\n<font color=blue>\n# 运行Crash,按照如下步骤定位： #\n1.gdb --args ./simv [options]\n\n2.run\n\n3.where\n</font> ","source":"_posts/VCS-Crash如何定位？.md","raw":"---\ntitle: VCS Crash如何定位？\ndate: 2019-04-18 22:37:37\ntags: [EDA,gdb]\ncategories: [验证]\npassword: 888888\nabstract: 欢迎光临~\nmessage: ~友情QQ红包，发送密码~\n---\n\n\n<font color=red>\n# 编译时Crash,按照如下步骤定位： #\n\n1.vcs -gdb [options]\n\n2.run\n\n3.where\n</font> \n\n<font color=blue>\n# 运行Crash,按照如下步骤定位： #\n1.gdb --args ./simv [options]\n\n2.run\n\n3.where\n</font> ","slug":"VCS-Crash如何定位？","published":1,"updated":"2019-04-23T01:20:45.060Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjut6caxt000cb0al0q223f6k","content":"<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\n<div id=\"hbe-security\">\n  <div class=\"hbe-input-container\">\n  <input type=\"password\" class=\"hbe-form-control\" id=\"pass\" placeholder=\"~友情QQ红包，发送密码~\" />\n    <label for=\"pass\">~友情QQ红包，发送密码~</label>\n    <div class=\"bottom-line\"></div>\n  </div>\n</div>\n<div id=\"decryptionError\" style=\"display: none;\">Incorrect Password!</div>\n<div id=\"noContentError\" style=\"display: none;\">No content to display!</div>\n<div id=\"encrypt-blog\" style=\"display:none\">\nU2FsdGVkX18yxgWoqNMx/gcsFfr9KlikPKqsHcH1kHww9NoRxHNNzb1++oVqrh6b1QNbUQFEnz8hd/HzLzEVl/F2AISokomIFgwMMSAOA2J3k6os7yVO+ZKesaPqG3ZKuKIy2ejZy7NyPnuBM1CLuhir0P7/egbwde1pmuUydkUChdKdBSI6eZ0H4KKCTWdOwLcemyLUDjUe1XoX4ddMqpsqx0PcWLyVWj8tyEA6bNQk8Oar3U8HLTRRqkfMRr9vqL6meMLmVRm5LQPumxsJvnsSLOwnRaEF+aKtV2J07firdPyYNC/4c11L02B1IyCE+srcEmd8uAn3zw9WSPY1LhLs4D8oBB98KjDg08FST6+jKWrmz3O5ShFW4JuJTYs7xByt1daQ3FTv+xF53m577tVxldwBbOPoR3dNObr3eGilLzxc5ky4TsqlYfAZKTqCRfug+wUcAAcuapMLmSWTXTMUYblFMSlyDn9bBTRYJ7e/e0uQbzC/+qgGHCaw0oM0E8jITDfsx8TSAziqi0c9Vihc82zYkU8Z8sET4kLMSNQsi1pUProsQjA0HUytZbxo9UaVYqxermCML2OpOeitytaMffd54xgVFkylYsDIwZKf4WTy1nfOKxZ/luXok4+gIK6lS6Kzizt7A4pWaFecx7aNVKmsZ6zUEj7qGJMFGy1/MV/nroGhJMcdEk5n2KElUXyKFuOsoxeivASlMXhd1SisLvqMul4UFtFr8l1b2SOy5EDspPIddZzMF4rEtlEOw/h4KGJKFXf7GeK4RR1lQI0DnyI605NPwhvETKmUbfURgG8dR+sNw2PhbeAZ8Q0thBeSYdMBCmvL1e/fZ4IuyKV4EgK6+44ucoTFtNw/GtOIXCbcpmSj/8N7o0rdpYV0\n</div>\n<script src=\"/lib/crypto-js.js\"></script><script src=\"/lib/blog-encrypt.js\"></script><link href=\"/css/blog-encrypt.css\" rel=\"stylesheet\" type=\"text/css\">","site":{"data":{}},"excerpt":"欢迎光临~","more":"欢迎光临~","origin":"<font color=\"red\"><br># 编译时Crash,按照如下步骤定位： #<br><br>1.vcs -gdb [options]<br><br>2.run<br><br>3.where<br></font> \n\n<font color=\"blue\"><br># 运行Crash,按照如下步骤定位： #<br>1.gdb –args ./simv [options]<br><br>2.run<br><br>3.where<br></font> ","encrypt":true,"template":"<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\n<div id=\"hbe-security\">\n  <div class=\"hbe-input-container\">\n  <input type=\"password\" class=\"hbe-form-control\" id=\"pass\" placeholder=\"~友情QQ红包，发送密码~\" />\n    <label for=\"pass\">~友情QQ红包，发送密码~</label>\n    <div class=\"bottom-line\"></div>\n  </div>\n</div>\n<div id=\"decryptionError\" style=\"display: none;\">Incorrect Password!</div>\n<div id=\"noContentError\" style=\"display: none;\">No content to display!</div>\n<div id=\"encrypt-blog\" style=\"display:none\">\nU2FsdGVkX18yxgWoqNMx/gcsFfr9KlikPKqsHcH1kHww9NoRxHNNzb1++oVqrh6b1QNbUQFEnz8hd/HzLzEVl/F2AISokomIFgwMMSAOA2J3k6os7yVO+ZKesaPqG3ZKuKIy2ejZy7NyPnuBM1CLuhir0P7/egbwde1pmuUydkUChdKdBSI6eZ0H4KKCTWdOwLcemyLUDjUe1XoX4ddMqpsqx0PcWLyVWj8tyEA6bNQk8Oar3U8HLTRRqkfMRr9vqL6meMLmVRm5LQPumxsJvnsSLOwnRaEF+aKtV2J07firdPyYNC/4c11L02B1IyCE+srcEmd8uAn3zw9WSPY1LhLs4D8oBB98KjDg08FST6+jKWrmz3O5ShFW4JuJTYs7xByt1daQ3FTv+xF53m577tVxldwBbOPoR3dNObr3eGilLzxc5ky4TsqlYfAZKTqCRfug+wUcAAcuapMLmSWTXTMUYblFMSlyDn9bBTRYJ7e/e0uQbzC/+qgGHCaw0oM0E8jITDfsx8TSAziqi0c9Vihc82zYkU8Z8sET4kLMSNQsi1pUProsQjA0HUytZbxo9UaVYqxermCML2OpOeitytaMffd54xgVFkylYsDIwZKf4WTy1nfOKxZ/luXok4+gIK6lS6Kzizt7A4pWaFecx7aNVKmsZ6zUEj7qGJMFGy1/MV/nroGhJMcdEk5n2KElUXyKFuOsoxeivASlMXhd1SisLvqMul4UFtFr8l1b2SOy5EDspPIddZzMF4rEtlEOw/h4KGJKFXf7GeK4RR1lQI0DnyI605NPwhvETKmUbfURgG8dR+sNw2PhbeAZ8Q0thBeSYdMBCmvL1e/fZ4IuyKV4EgK6+44ucoTFtNw/GtOIXCbcpmSj/8N7o0rdpYV0\n</div>\n","decryptionError":"Incorrect Password!","noContentError":"No content to display!"},{"title":"clocking块为什么能保证race free?","date":"2019-04-18T09:19:13.000Z","_content":"## 为啥要推荐使用clocking块？\n\n<font color=red>\n代码例子：\n<pre name=\"code\" class=\"systemverilog\">  \t\n\nclocking cb @(negedge clk);\n  input v;\nendclocking \n\nalways @(cb) $display(cb.v);//采样old值\n\nalways @(negedge clk) $display(cb.v);//采样old or new值和仿真器相关。\n\n</pre>\n\n主要原因是clocking块中默认为1step采样，在clk下降沿发生时（@(cb)触发），数据已经采样了。\n而第二条always语句直接(@(negedge clk))和（@(cb)）并发，所以就有race glitch。\n\n</font> \n","source":"_posts/clocking块为什么能保证race-free.md","raw":"---\ntitle: clocking块为什么能保证race free?\ndate: 2019-04-18 17:19:13\ntags: [SystemVerilog]\ncategories: [验证]\n---\n## 为啥要推荐使用clocking块？\n\n<font color=red>\n代码例子：\n<pre name=\"code\" class=\"systemverilog\">  \t\n\nclocking cb @(negedge clk);\n  input v;\nendclocking \n\nalways @(cb) $display(cb.v);//采样old值\n\nalways @(negedge clk) $display(cb.v);//采样old or new值和仿真器相关。\n\n</pre>\n\n主要原因是clocking块中默认为1step采样，在clk下降沿发生时（@(cb)触发），数据已经采样了。\n而第二条always语句直接(@(negedge clk))和（@(cb)）并发，所以就有race glitch。\n\n</font> \n","slug":"clocking块为什么能保证race-free","published":1,"updated":"2019-04-23T01:20:45.062Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjut6caxy000gb0albyfg6wzu","content":"<h2 id=\"为啥要推荐使用clocking块？\"><a href=\"#为啥要推荐使用clocking块？\" class=\"headerlink\" title=\"为啥要推荐使用clocking块？\"></a>为啥要推荐使用clocking块？</h2><font color=\"red\"><br>代码例子：<br><pre name=\"code\" class=\"systemverilog\"><br><br>clocking cb @(negedge clk);<br>  input v;<br>endclocking<br><br>always @(cb) $display(cb.v);//采样old值<br><br>always @(negedge clk) $display(cb.v);//采样old or new值和仿真器相关。<br><br></pre><br><br>主要原因是clocking块中默认为1step采样，在clk下降沿发生时（@(cb)触发），数据已经采样了。<br>而第二条always语句直接(@(negedge clk))和（@(cb)）并发，所以就有race glitch。<br><br></font> \n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"为啥要推荐使用clocking块？\"><a href=\"#为啥要推荐使用clocking块？\" class=\"headerlink\" title=\"为啥要推荐使用clocking块？\"></a>为啥要推荐使用clocking块？</h2><font color=\"red\"><br>代码例子：<br><pre name=\"code\" class=\"systemverilog\"><br><br>clocking cb @(negedge clk);<br>  input v;<br>endclocking<br><br>always @(cb) $display(cb.v);//采样old值<br><br>always @(negedge clk) $display(cb.v);//采样old or new值和仿真器相关。<br><br></pre><br><br>主要原因是clocking块中默认为1step采样，在clk下降沿发生时（@(cb)触发），数据已经采样了。<br>而第二条always语句直接(@(negedge clk))和（@(cb)）并发，所以就有race glitch。<br><br></font> \n"},{"title":"github回退代码到历史指定版本","date":"2019-04-22T10:51:16.000Z","_content":"\n+ 前提是本地已经有了git的origin master库或者克隆需要回退的代码到本地。\n\n+ 查询历史对应不同版本的ID,用于回退使用。\n```\n\tgit log --pretty=oneline\n```\n+ 使用git log命令查看所有的历史版本，获取你git的某个历史版本的id。\n * 假设查到历史版本的id是fae6966548e3ae76cfa7f38a461c438cf75ba965。\n\n+ 恢复到历史版本。\n```\n\tgit reset --hard fae6966548e3ae76cfa7f38a461c438cf75ba965\n```\n\n+ 把修改推到远程服务器。\n```\n\tgit push -f -u origin master\n```\n\n+ 重新更新本地代码。\n```\n\tgit pull\n```\n","source":"_posts/github回退代码到历史指定版本.md","raw":"---\ntitle: github回退代码到历史指定版本\ndate: 2019-04-22 18:51:16\ntags:\n  - git\n  - github\n  - shell\ncategories:\n  - Linux\n---\n\n+ 前提是本地已经有了git的origin master库或者克隆需要回退的代码到本地。\n\n+ 查询历史对应不同版本的ID,用于回退使用。\n```\n\tgit log --pretty=oneline\n```\n+ 使用git log命令查看所有的历史版本，获取你git的某个历史版本的id。\n * 假设查到历史版本的id是fae6966548e3ae76cfa7f38a461c438cf75ba965。\n\n+ 恢复到历史版本。\n```\n\tgit reset --hard fae6966548e3ae76cfa7f38a461c438cf75ba965\n```\n\n+ 把修改推到远程服务器。\n```\n\tgit push -f -u origin master\n```\n\n+ 重新更新本地代码。\n```\n\tgit pull\n```\n","slug":"github回退代码到历史指定版本","published":1,"updated":"2019-04-23T01:33:42.452Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjut6cay1000ib0algbqq3wsk","content":"<ul>\n<li><p>前提是本地已经有了git的origin master库或者克隆需要回退的代码到本地。</p>\n</li>\n<li><p>查询历史对应不同版本的ID,用于回退使用。</p>\n<figure class=\"hljs highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs undefined\">git <span class=\"hljs-built_in\">log</span> <span class=\"hljs-comment\">--pretty=oneline</span><br></code></pre></td></tr></table></figure>\n</li>\n<li><p>使用git log命令查看所有的历史版本，获取你git的某个历史版本的id。</p>\n<ul>\n<li>假设查到历史版本的id是fae6966548e3ae76cfa7f38a461c438cf75ba965。</li>\n</ul>\n</li>\n<li><p>恢复到历史版本。</p>\n<figure class=\"hljs highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs undefined\">git <span class=\"hljs-keyword\">reset</span> <span class=\"hljs-comment\">--hard fae6966548e3ae76cfa7f38a461c438cf75ba965</span><br></code></pre></td></tr></table></figure>\n</li>\n<li><p>把修改推到远程服务器。</p>\n<figure class=\"hljs highlight maxima\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs undefined\">git <span class=\"hljs-built_in\">push</span> -f -u <span class=\"hljs-built_in\">origin</span> master<br></code></pre></td></tr></table></figure>\n</li>\n<li><p>重新更新本地代码。</p>\n<figure class=\"hljs highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs undefined\"><span class=\"hljs-attribute\">git pull</span><br></code></pre></td></tr></table></figure>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li><p>前提是本地已经有了git的origin master库或者克隆需要回退的代码到本地。</p>\n</li>\n<li><p>查询历史对应不同版本的ID,用于回退使用。</p>\n<figure class=\"hljs highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs undefined\">git <span class=\"hljs-built_in\">log</span> <span class=\"hljs-comment\">--pretty=oneline</span><br></code></pre></td></tr></table></figure>\n</li>\n<li><p>使用git log命令查看所有的历史版本，获取你git的某个历史版本的id。</p>\n<ul>\n<li>假设查到历史版本的id是fae6966548e3ae76cfa7f38a461c438cf75ba965。</li>\n</ul>\n</li>\n<li><p>恢复到历史版本。</p>\n<figure class=\"hljs highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs undefined\">git <span class=\"hljs-keyword\">reset</span> <span class=\"hljs-comment\">--hard fae6966548e3ae76cfa7f38a461c438cf75ba965</span><br></code></pre></td></tr></table></figure>\n</li>\n<li><p>把修改推到远程服务器。</p>\n<figure class=\"hljs highlight maxima\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs undefined\">git <span class=\"hljs-built_in\">push</span> -f -u <span class=\"hljs-built_in\">origin</span> master<br></code></pre></td></tr></table></figure>\n</li>\n<li><p>重新更新本地代码。</p>\n<figure class=\"hljs highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs undefined\"><span class=\"hljs-attribute\">git pull</span><br></code></pre></td></tr></table></figure>\n</li>\n</ul>\n"},{"title":"使用synopsys uvmgen快速生成uvm环境","date":"2019-04-19T11:09:00.000Z","_content":"### 通过vcs uvmgen模板生成UVM环境\n\n+ 命令行：\n![uvmgen-cmd](使用synopsys uvmgen快速生成uvm环境/uvmgen1.png)\n+ 树形结构：\n![uvmgen-tree](使用synopsys uvmgen快速生成uvm环境/uvmgen2.png)\n+ 代码样例：\n![uvmgen-demo](使用synopsys uvmgen快速生成uvm环境/uvmgen3.png)","source":"_posts/使用synopsys uvmgen快速生成uvm环境.md","raw":"title: 使用synopsys uvmgen快速生成uvm环境\ntags:\n  - UVM\n  - EDA\n  - synopsys\ncategories:\n  - 验证\ndate: 2019-04-19 19:09:00\n---\n### 通过vcs uvmgen模板生成UVM环境\n\n+ 命令行：\n![uvmgen-cmd](使用synopsys uvmgen快速生成uvm环境/uvmgen1.png)\n+ 树形结构：\n![uvmgen-tree](使用synopsys uvmgen快速生成uvm环境/uvmgen2.png)\n+ 代码样例：\n![uvmgen-demo](使用synopsys uvmgen快速生成uvm环境/uvmgen3.png)","slug":"使用synopsys uvmgen快速生成uvm环境","published":1,"updated":"2019-04-23T01:20:45.069Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjut6cay4000nb0almykcdfi8","content":"<h3 id=\"通过vcs-uvmgen模板生成UVM环境\"><a href=\"#通过vcs-uvmgen模板生成UVM环境\" class=\"headerlink\" title=\"通过vcs uvmgen模板生成UVM环境\"></a>通过vcs uvmgen模板生成UVM环境</h3><ul>\n<li>命令行：<br><img src=\"/2019/04/19/使用synopsys uvmgen快速生成uvm环境/uvmgen1.png\" alt=\"uvmgen-cmd\"></li>\n<li>树形结构：<br><img src=\"/2019/04/19/使用synopsys uvmgen快速生成uvm环境/uvmgen2.png\" alt=\"uvmgen-tree\"></li>\n<li>代码样例：<br><img src=\"/2019/04/19/使用synopsys uvmgen快速生成uvm环境/uvmgen3.png\" alt=\"uvmgen-demo\"></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"通过vcs-uvmgen模板生成UVM环境\"><a href=\"#通过vcs-uvmgen模板生成UVM环境\" class=\"headerlink\" title=\"通过vcs uvmgen模板生成UVM环境\"></a>通过vcs uvmgen模板生成UVM环境</h3><ul>\n<li>命令行：<br><img src=\"/2019/04/19/使用synopsys uvmgen快速生成uvm环境/uvmgen1.png\" alt=\"uvmgen-cmd\"></li>\n<li>树形结构：<br><img src=\"/2019/04/19/使用synopsys uvmgen快速生成uvm环境/uvmgen2.png\" alt=\"uvmgen-tree\"></li>\n<li>代码样例：<br><img src=\"/2019/04/19/使用synopsys uvmgen快速生成uvm环境/uvmgen3.png\" alt=\"uvmgen-demo\"></li>\n</ul>\n"},{"title":"常用脚本收集","author":"神秘人","date":"2019-04-19T08:38:00.000Z","_content":"### 常用脚本收集\n\n+ Sed\n   * 直接对文本文件进行行替代操作\n    ```\n\tsed -i 's/原字符串/新字符串/' file\n\tsed -i 's/原字符串/新字符串/g' file\n    ```\n   * 去掉 “行首” 带“@”的首字母@的行\n    ```\n\tsed -i 's/^@//' file\n    ```\n   * 在含有特定字符串的行前插入新行\n    ```\n\tsed -i '/特定字符串/i 新行字符串' file\n    ```\n   * 在含有特定字符串的行后插入新行\n    ```\n\tsed -i '/特定字符串/a 新行字符串' file\n    ```\n   * 删除含有特定字符串的行\n    ```\n\tsed -i '/字符串/d' file\n    ```\n\n\n---\n\n+ python\n\n---\n\n+ Perl\n\n\n---\n\n+ Shell\n\t* 列出所有目录使用量，并按大小排序。\n    ```\n\tls|xargs du -h|sort -rn \n\t#不递归下级目录使用du -sh\n    ```\n    * 查看文件排除以#开关和空白行。\n    ```\n\tegrep -v \"^#|^$\"  filename\n\tsed '/#.*$/d; /^ *$/d'\n    ```\n    * 查删除空格和空行。\n    ```\n\tsed '/^$/d' filename #删除空行\n\tsed 's/ //g' filename\n\tsed 's/[[:space:]]//g' filename\n    ```\n    * 删除#后的注释。\n    ```\n\tsed -i 's/#.*$//g' filename\n    ```\n    * 删除空文件。\n    ```\n\tfind / -type f -size 0 -exec rm -rf {} \\;\n    ```\n    * 查找进程pid并kill。\n    ```\n\tpgrep nginx|xargs kill \n\tpidof nginx|xargs kill\n    ```\n    * 取当前IP地址。\n    ```\n\tifconfig |awk -F\"[ ]+|[:]\" 'NR==2 {print $4}'\n    ```\n    * shell下新建文件夹并进入，以下加入bashrc。\n    ```\n\tmkcd ( ){\n    \tmkdir $1\n        cd $1\n    }\n    ```\n    * Kill整个进程树。\n    ```\n\tpstree -ap 10277|grep -oP '[0-9]{4,6}'|xargs kill -9\n    ```\n    * 目录中大量文件删除。\n    ```\n\tls | xargs rm\n    ```","source":"_posts/常用脚本收集.md","raw":"title: 常用脚本收集\nauthor: 神秘人\ntags:\n  - 脚本\ncategories:\n  - 脚本\ndate: 2019-04-19 16:38:00\n---\n### 常用脚本收集\n\n+ Sed\n   * 直接对文本文件进行行替代操作\n    ```\n\tsed -i 's/原字符串/新字符串/' file\n\tsed -i 's/原字符串/新字符串/g' file\n    ```\n   * 去掉 “行首” 带“@”的首字母@的行\n    ```\n\tsed -i 's/^@//' file\n    ```\n   * 在含有特定字符串的行前插入新行\n    ```\n\tsed -i '/特定字符串/i 新行字符串' file\n    ```\n   * 在含有特定字符串的行后插入新行\n    ```\n\tsed -i '/特定字符串/a 新行字符串' file\n    ```\n   * 删除含有特定字符串的行\n    ```\n\tsed -i '/字符串/d' file\n    ```\n\n\n---\n\n+ python\n\n---\n\n+ Perl\n\n\n---\n\n+ Shell\n\t* 列出所有目录使用量，并按大小排序。\n    ```\n\tls|xargs du -h|sort -rn \n\t#不递归下级目录使用du -sh\n    ```\n    * 查看文件排除以#开关和空白行。\n    ```\n\tegrep -v \"^#|^$\"  filename\n\tsed '/#.*$/d; /^ *$/d'\n    ```\n    * 查删除空格和空行。\n    ```\n\tsed '/^$/d' filename #删除空行\n\tsed 's/ //g' filename\n\tsed 's/[[:space:]]//g' filename\n    ```\n    * 删除#后的注释。\n    ```\n\tsed -i 's/#.*$//g' filename\n    ```\n    * 删除空文件。\n    ```\n\tfind / -type f -size 0 -exec rm -rf {} \\;\n    ```\n    * 查找进程pid并kill。\n    ```\n\tpgrep nginx|xargs kill \n\tpidof nginx|xargs kill\n    ```\n    * 取当前IP地址。\n    ```\n\tifconfig |awk -F\"[ ]+|[:]\" 'NR==2 {print $4}'\n    ```\n    * shell下新建文件夹并进入，以下加入bashrc。\n    ```\n\tmkcd ( ){\n    \tmkdir $1\n        cd $1\n    }\n    ```\n    * Kill整个进程树。\n    ```\n\tpstree -ap 10277|grep -oP '[0-9]{4,6}'|xargs kill -9\n    ```\n    * 目录中大量文件删除。\n    ```\n\tls | xargs rm\n    ```","slug":"常用脚本收集","published":1,"updated":"2019-04-23T01:20:45.078Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjut6cay6000pb0alc9cyygyi","content":"<h3 id=\"常用脚本收集\"><a href=\"#常用脚本收集\" class=\"headerlink\" title=\"常用脚本收集\"></a>常用脚本收集</h3><ul>\n<li><p>Sed</p>\n<ul>\n<li><p>直接对文本文件进行行替代操作</p>\n<figure class=\"hljs highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs undefined\">sed -<span class=\"hljs-selector-tag\">i</span> <span class=\"hljs-string\">'s/原字符串/新字符串/'</span> file<br>sed -<span class=\"hljs-selector-tag\">i</span> <span class=\"hljs-string\">'s/原字符串/新字符串/g'</span> file<br></code></pre></td></tr></table></figure>\n</li>\n<li><p>去掉 “行首” 带“@”的首字母@的行</p>\n<figure class=\"hljs highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs undefined\">sed -<span class=\"hljs-selector-tag\">i</span> <span class=\"hljs-string\">'s/^@//'</span> file<br></code></pre></td></tr></table></figure>\n</li>\n<li><p>在含有特定字符串的行前插入新行</p>\n<figure class=\"hljs highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs undefined\">sed -<span class=\"hljs-selector-tag\">i</span> <span class=\"hljs-string\">'/特定字符串/i 新行字符串'</span> file<br></code></pre></td></tr></table></figure>\n</li>\n<li><p>在含有特定字符串的行后插入新行</p>\n<figure class=\"hljs highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs undefined\">sed -<span class=\"hljs-selector-tag\">i</span> <span class=\"hljs-string\">'/特定字符串/a 新行字符串'</span> file<br></code></pre></td></tr></table></figure>\n</li>\n<li><p>删除含有特定字符串的行</p>\n<figure class=\"hljs highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs undefined\">sed -<span class=\"hljs-selector-tag\">i</span> <span class=\"hljs-string\">'/字符串/d'</span> file<br></code></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li>python</li>\n</ul>\n<hr>\n<ul>\n<li>Perl</li>\n</ul>\n<hr>\n<ul>\n<li><p>Shell</p>\n<ul>\n<li><p>列出所有目录使用量，并按大小排序。</p>\n<figure class=\"hljs highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs undefined\"><span class=\"hljs-keyword\">ls</span>|xargs du -<span class=\"hljs-keyword\">h</span>|<span class=\"hljs-keyword\">sort</span> -rn <br>#不递归下级目录使用du -<span class=\"hljs-keyword\">sh</span><br></code></pre></td></tr></table></figure>\n</li>\n<li><p>查看文件排除以#开关和空白行。</p>\n<figure class=\"hljs highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs undefined\"><span class=\"hljs-attribute\">egrep</span> -v <span class=\"hljs-string\">\"^#|^$\"</span>  filename<br>sed <span class=\"hljs-string\">'/#.*$/d; /^ *$/d'</span><br></code></pre></td></tr></table></figure>\n</li>\n<li><p>查删除空格和空行。</p>\n<figure class=\"hljs highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs undefined\"><span class=\"hljs-attribute\">sed</span> <span class=\"hljs-string\">'/^$/d'</span> filename <span class=\"hljs-comment\">#删除空行</span><br>sed <span class=\"hljs-string\">'s/ //g'</span> filename<br>sed <span class=\"hljs-string\">'s/[[:space:]]//g'</span> filename<br></code></pre></td></tr></table></figure>\n</li>\n<li><p>删除#后的注释。</p>\n<figure class=\"hljs highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs undefined\">sed -<span class=\"hljs-selector-tag\">i</span> <span class=\"hljs-string\">'s/#.*$//g'</span> filename<br></code></pre></td></tr></table></figure>\n</li>\n<li><p>删除空文件。</p>\n<figure class=\"hljs highlight sqf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs undefined\"><span class=\"hljs-built_in\">find</span> / -<span class=\"hljs-built_in\">type</span> f -<span class=\"hljs-built_in\">size</span> <span class=\"hljs-number\">0</span> -<span class=\"hljs-built_in\">exec</span> rm -rf &#123;&#125; \\;<br></code></pre></td></tr></table></figure>\n</li>\n<li><p>查找进程pid并kill。</p>\n<figure class=\"hljs highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs undefined\">pgrep nginx<span class=\"hljs-string\">|xargs kill </span><br>pidof nginx<span class=\"hljs-string\">|xargs kill</span><br></code></pre></td></tr></table></figure>\n</li>\n<li><p>取当前IP地址。</p>\n<figure class=\"hljs highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs undefined\"><span class=\"hljs-attribute\">ifconfig</span> |awk -F<span class=\"hljs-string\">\"[ ]+|[:]\"</span> <span class=\"hljs-string\">'NR==2 &#123;print <span class=\"hljs-variable\">$4</span>&#125;'</span><br></code></pre></td></tr></table></figure>\n</li>\n<li><p>shell下新建文件夹并进入，以下加入bashrc。</p>\n<figure class=\"hljs highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs undefined\"><span class=\"hljs-attribute\">mkcd</span> ( )&#123;<br>   \t<span class=\"hljs-attribute\">mkdir</span> <span class=\"hljs-variable\">$1</span><br>       cd <span class=\"hljs-variable\">$1</span><br>   &#125;<br></code></pre></td></tr></table></figure>\n</li>\n<li><p>Kill整个进程树。</p>\n<figure class=\"hljs highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs undefined\">pstree -ap <span class=\"hljs-number\">10277</span>|grep -oP '[<span class=\"hljs-number\">0</span><span class=\"hljs-number\">-9</span>]&#123;<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">6</span>&#125;'|xargs kill <span class=\"hljs-number\">-9</span><br></code></pre></td></tr></table></figure>\n</li>\n<li><p>目录中大量文件删除。</p>\n<figure class=\"hljs highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs undefined\"><span class=\"hljs-keyword\">ls</span> | xargs <span class=\"hljs-keyword\">rm</span><br></code></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"常用脚本收集\"><a href=\"#常用脚本收集\" class=\"headerlink\" title=\"常用脚本收集\"></a>常用脚本收集</h3><ul>\n<li><p>Sed</p>\n<ul>\n<li><p>直接对文本文件进行行替代操作</p>\n<figure class=\"hljs highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs undefined\">sed -<span class=\"hljs-selector-tag\">i</span> <span class=\"hljs-string\">'s/原字符串/新字符串/'</span> file<br>sed -<span class=\"hljs-selector-tag\">i</span> <span class=\"hljs-string\">'s/原字符串/新字符串/g'</span> file<br></code></pre></td></tr></table></figure>\n</li>\n<li><p>去掉 “行首” 带“@”的首字母@的行</p>\n<figure class=\"hljs highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs undefined\">sed -<span class=\"hljs-selector-tag\">i</span> <span class=\"hljs-string\">'s/^@//'</span> file<br></code></pre></td></tr></table></figure>\n</li>\n<li><p>在含有特定字符串的行前插入新行</p>\n<figure class=\"hljs highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs undefined\">sed -<span class=\"hljs-selector-tag\">i</span> <span class=\"hljs-string\">'/特定字符串/i 新行字符串'</span> file<br></code></pre></td></tr></table></figure>\n</li>\n<li><p>在含有特定字符串的行后插入新行</p>\n<figure class=\"hljs highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs undefined\">sed -<span class=\"hljs-selector-tag\">i</span> <span class=\"hljs-string\">'/特定字符串/a 新行字符串'</span> file<br></code></pre></td></tr></table></figure>\n</li>\n<li><p>删除含有特定字符串的行</p>\n<figure class=\"hljs highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs undefined\">sed -<span class=\"hljs-selector-tag\">i</span> <span class=\"hljs-string\">'/字符串/d'</span> file<br></code></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li>python</li>\n</ul>\n<hr>\n<ul>\n<li>Perl</li>\n</ul>\n<hr>\n<ul>\n<li><p>Shell</p>\n<ul>\n<li><p>列出所有目录使用量，并按大小排序。</p>\n<figure class=\"hljs highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs undefined\"><span class=\"hljs-keyword\">ls</span>|xargs du -<span class=\"hljs-keyword\">h</span>|<span class=\"hljs-keyword\">sort</span> -rn <br>#不递归下级目录使用du -<span class=\"hljs-keyword\">sh</span><br></code></pre></td></tr></table></figure>\n</li>\n<li><p>查看文件排除以#开关和空白行。</p>\n<figure class=\"hljs highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs undefined\"><span class=\"hljs-attribute\">egrep</span> -v <span class=\"hljs-string\">\"^#|^$\"</span>  filename<br>sed <span class=\"hljs-string\">'/#.*$/d; /^ *$/d'</span><br></code></pre></td></tr></table></figure>\n</li>\n<li><p>查删除空格和空行。</p>\n<figure class=\"hljs highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs undefined\"><span class=\"hljs-attribute\">sed</span> <span class=\"hljs-string\">'/^$/d'</span> filename <span class=\"hljs-comment\">#删除空行</span><br>sed <span class=\"hljs-string\">'s/ //g'</span> filename<br>sed <span class=\"hljs-string\">'s/[[:space:]]//g'</span> filename<br></code></pre></td></tr></table></figure>\n</li>\n<li><p>删除#后的注释。</p>\n<figure class=\"hljs highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs undefined\">sed -<span class=\"hljs-selector-tag\">i</span> <span class=\"hljs-string\">'s/#.*$//g'</span> filename<br></code></pre></td></tr></table></figure>\n</li>\n<li><p>删除空文件。</p>\n<figure class=\"hljs highlight sqf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs undefined\"><span class=\"hljs-built_in\">find</span> / -<span class=\"hljs-built_in\">type</span> f -<span class=\"hljs-built_in\">size</span> <span class=\"hljs-number\">0</span> -<span class=\"hljs-built_in\">exec</span> rm -rf &#123;&#125; \\;<br></code></pre></td></tr></table></figure>\n</li>\n<li><p>查找进程pid并kill。</p>\n<figure class=\"hljs highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs undefined\">pgrep nginx<span class=\"hljs-string\">|xargs kill </span><br>pidof nginx<span class=\"hljs-string\">|xargs kill</span><br></code></pre></td></tr></table></figure>\n</li>\n<li><p>取当前IP地址。</p>\n<figure class=\"hljs highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs undefined\"><span class=\"hljs-attribute\">ifconfig</span> |awk -F<span class=\"hljs-string\">\"[ ]+|[:]\"</span> <span class=\"hljs-string\">'NR==2 &#123;print <span class=\"hljs-variable\">$4</span>&#125;'</span><br></code></pre></td></tr></table></figure>\n</li>\n<li><p>shell下新建文件夹并进入，以下加入bashrc。</p>\n<figure class=\"hljs highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs undefined\"><span class=\"hljs-attribute\">mkcd</span> ( )&#123;<br>   \t<span class=\"hljs-attribute\">mkdir</span> <span class=\"hljs-variable\">$1</span><br>       cd <span class=\"hljs-variable\">$1</span><br>   &#125;<br></code></pre></td></tr></table></figure>\n</li>\n<li><p>Kill整个进程树。</p>\n<figure class=\"hljs highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs undefined\">pstree -ap <span class=\"hljs-number\">10277</span>|grep -oP '[<span class=\"hljs-number\">0</span><span class=\"hljs-number\">-9</span>]&#123;<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">6</span>&#125;'|xargs kill <span class=\"hljs-number\">-9</span><br></code></pre></td></tr></table></figure>\n</li>\n<li><p>目录中大量文件删除。</p>\n<figure class=\"hljs highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs undefined\"><span class=\"hljs-keyword\">ls</span> | xargs <span class=\"hljs-keyword\">rm</span><br></code></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n"},{"title":"形式验证","date":"2019-04-17T03:15:24.000Z","_content":"## 1.什么时候需要使用形式验证（Formal Verification：FV）\n\n1.1 **FV FOR COMPLETE COVERAGE：**\n\n\tWhen you want to get complete coverage of design behaviors, consider using FV as your primary validation method.\n\t注释：\n\t\t当你需要100%覆盖功能时。例如：32bit * 32bit 乘法器，需要每个数字都要进行cover。\n\t\n\n1.2 **FV for Bug Hunting：**\n\n\tWhen you have a design with nontrivial logic and are worried that you will not be able to get sufficient coverage with simulation tests, think about FV as a supplement to simulation.\n\t注释：\n\t\t担心无法获得足够的仿真测试覆盖时，可以考虑将FV作为补充，增强tapout信心。\n\n1.3 **FV for Exploring Designs：**\n\n\tWhen you have a design where you can easily specify interesting states or outputs, but it is difficult or time-consuming to specify the sequence of inputs needed to get there, think about using FV.\n\t注释：\n\t\t虽然设计简单，如一些MUX组合，但很难或费时地指定需要的输入序列，可以考虑使用FV。\n","source":"_posts/形式验证.md","raw":"---\ntitle: 形式验证\ndate: 2019-04-17 11:15:24\ntags: [SystemVerilog,ABV,FV]\ncategories: 验证\n---\n## 1.什么时候需要使用形式验证（Formal Verification：FV）\n\n1.1 **FV FOR COMPLETE COVERAGE：**\n\n\tWhen you want to get complete coverage of design behaviors, consider using FV as your primary validation method.\n\t注释：\n\t\t当你需要100%覆盖功能时。例如：32bit * 32bit 乘法器，需要每个数字都要进行cover。\n\t\n\n1.2 **FV for Bug Hunting：**\n\n\tWhen you have a design with nontrivial logic and are worried that you will not be able to get sufficient coverage with simulation tests, think about FV as a supplement to simulation.\n\t注释：\n\t\t担心无法获得足够的仿真测试覆盖时，可以考虑将FV作为补充，增强tapout信心。\n\n1.3 **FV for Exploring Designs：**\n\n\tWhen you have a design where you can easily specify interesting states or outputs, but it is difficult or time-consuming to specify the sequence of inputs needed to get there, think about using FV.\n\t注释：\n\t\t虽然设计简单，如一些MUX组合，但很难或费时地指定需要的输入序列，可以考虑使用FV。\n","slug":"形式验证","published":1,"updated":"2019-04-23T01:20:45.079Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjut6cayy001yb0altslbsbug","content":"<h2 id=\"1-什么时候需要使用形式验证（Formal-Verification：FV）\"><a href=\"#1-什么时候需要使用形式验证（Formal-Verification：FV）\" class=\"headerlink\" title=\"1.什么时候需要使用形式验证（Formal Verification：FV）\"></a>1.什么时候需要使用形式验证（Formal Verification：FV）</h2><p>1.1 <strong>FV FOR COMPLETE COVERAGE：</strong></p>\n<pre><code>When you want to get complete coverage of design behaviors, consider using FV as your primary validation method.\n注释：\n    当你需要100%覆盖功能时。例如：32bit * 32bit 乘法器，需要每个数字都要进行cover。\n</code></pre><p>1.2 <strong>FV for Bug Hunting：</strong></p>\n<pre><code>When you have a design with nontrivial logic and are worried that you will not be able to get sufficient coverage with simulation tests, think about FV as a supplement to simulation.\n注释：\n    担心无法获得足够的仿真测试覆盖时，可以考虑将FV作为补充，增强tapout信心。\n</code></pre><p>1.3 <strong>FV for Exploring Designs：</strong></p>\n<pre><code>When you have a design where you can easily specify interesting states or outputs, but it is difficult or time-consuming to specify the sequence of inputs needed to get there, think about using FV.\n注释：\n    虽然设计简单，如一些MUX组合，但很难或费时地指定需要的输入序列，可以考虑使用FV。\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-什么时候需要使用形式验证（Formal-Verification：FV）\"><a href=\"#1-什么时候需要使用形式验证（Formal-Verification：FV）\" class=\"headerlink\" title=\"1.什么时候需要使用形式验证（Formal Verification：FV）\"></a>1.什么时候需要使用形式验证（Formal Verification：FV）</h2><p>1.1 <strong>FV FOR COMPLETE COVERAGE：</strong></p>\n<pre><code>When you want to get complete coverage of design behaviors, consider using FV as your primary validation method.\n注释：\n    当你需要100%覆盖功能时。例如：32bit * 32bit 乘法器，需要每个数字都要进行cover。\n</code></pre><p>1.2 <strong>FV for Bug Hunting：</strong></p>\n<pre><code>When you have a design with nontrivial logic and are worried that you will not be able to get sufficient coverage with simulation tests, think about FV as a supplement to simulation.\n注释：\n    担心无法获得足够的仿真测试覆盖时，可以考虑将FV作为补充，增强tapout信心。\n</code></pre><p>1.3 <strong>FV for Exploring Designs：</strong></p>\n<pre><code>When you have a design where you can easily specify interesting states or outputs, but it is difficult or time-consuming to specify the sequence of inputs needed to get there, think about using FV.\n注释：\n    虽然设计简单，如一些MUX组合，但很难或费时地指定需要的输入序列，可以考虑使用FV。\n</code></pre>"}],"PostAsset":[{"_id":"source/_posts/Layer-Sequence结构图/Layer-Sequence结构图.png","post":"cjut6caxg0003b0aly2o5vtkn","slug":"Layer-Sequence结构图.png","modified":1,"renderable":1},{"_id":"source/_posts/使用synopsys uvmgen快速生成uvm环境/uvmgen1.png","post":"cjut6cay4000nb0almykcdfi8","slug":"uvmgen1.png","modified":1,"renderable":1},{"_id":"source/_posts/使用synopsys uvmgen快速生成uvm环境/uvmgen2.png","post":"cjut6cay4000nb0almykcdfi8","slug":"uvmgen2.png","modified":1,"renderable":1},{"_id":"source/_posts/使用synopsys uvmgen快速生成uvm环境/uvmgen3.png","post":"cjut6cay4000nb0almykcdfi8","slug":"uvmgen3.png","modified":1,"renderable":1}],"PostCategory":[{"post_id":"cjut6caxb0001b0alihvhavii","category_id":"cjut6caxi0004b0alq1sx83nq","_id":"cjut6caxv000db0ale8uekd95"},{"post_id":"cjut6caxg0003b0aly2o5vtkn","category_id":"cjut6caxq0009b0alrhxum5rs","_id":"cjut6cay3000lb0alavp207n6"},{"post_id":"cjut6caxt000cb0al0q223f6k","category_id":"cjut6caxq0009b0alrhxum5rs","_id":"cjut6cay5000ob0aljzb5opez"},{"post_id":"cjut6caxy000gb0albyfg6wzu","category_id":"cjut6caxq0009b0alrhxum5rs","_id":"cjut6cay7000rb0ali7jkzr6k"},{"post_id":"cjut6caxk0006b0alykw7qybs","category_id":"cjut6caxq0009b0alrhxum5rs","_id":"cjut6cay9000tb0al8urkz2n5"},{"post_id":"cjut6cay1000ib0algbqq3wsk","category_id":"cjut6caxi0004b0alq1sx83nq","_id":"cjut6caya000vb0al5w956be5"},{"post_id":"cjut6cay4000nb0almykcdfi8","category_id":"cjut6caxq0009b0alrhxum5rs","_id":"cjut6cayc000zb0alf523f1cy"},{"post_id":"cjut6caxp0008b0al0u8w2yqd","category_id":"cjut6caxq0009b0alrhxum5rs","_id":"cjut6cayd0010b0almtetrz10"},{"post_id":"cjut6caxr000bb0al9uymbup6","category_id":"cjut6caxq0009b0alrhxum5rs","_id":"cjut6caye0012b0aligbvd8lb"},{"post_id":"cjut6caxr000bb0al9uymbup6","category_id":"cjut6cay7000qb0albrlsbat7","_id":"cjut6cayf0014b0alkg4r7cxt"},{"post_id":"cjut6cay6000pb0alc9cyygyi","category_id":"cjut6cayb000wb0aljdrctedi","_id":"cjut6cayh0017b0albas20b14"},{"post_id":"cjut6cayy001yb0altslbsbug","category_id":"cjut6caxq0009b0alrhxum5rs","_id":"cjut6caz20022b0alaitdceu6"}],"PostTag":[{"post_id":"cjut6caxb0001b0alihvhavii","tag_id":"cjut6caxk0005b0al37w2zi6q","_id":"cjut6cay0000hb0alqhplefin"},{"post_id":"cjut6caxb0001b0alihvhavii","tag_id":"cjut6caxq000ab0alya1k3pne","_id":"cjut6cay2000jb0alay5nqexk"},{"post_id":"cjut6caxg0003b0aly2o5vtkn","tag_id":"cjut6caxw000fb0alllxpvl78","_id":"cjut6cay9000ub0alikkla629"},{"post_id":"cjut6caxg0003b0aly2o5vtkn","tag_id":"cjut6cay3000mb0alxterk6fm","_id":"cjut6cayb000xb0alraz8xq7i"},{"post_id":"cjut6caxk0006b0alykw7qybs","tag_id":"cjut6caxw000fb0alllxpvl78","_id":"cjut6cayf0013b0alt5amgdga"},{"post_id":"cjut6caxk0006b0alykw7qybs","tag_id":"cjut6cay3000mb0alxterk6fm","_id":"cjut6cayg0015b0allzaslyzr"},{"post_id":"cjut6caxp0008b0al0u8w2yqd","tag_id":"cjut6caxw000fb0alllxpvl78","_id":"cjut6cayi0019b0aligya6syv"},{"post_id":"cjut6caxp0008b0al0u8w2yqd","tag_id":"cjut6cay3000mb0alxterk6fm","_id":"cjut6cayj001ab0alvvjjti9v"},{"post_id":"cjut6caxr000bb0al9uymbup6","tag_id":"cjut6caxw000fb0alllxpvl78","_id":"cjut6cayk001eb0albiekx15h"},{"post_id":"cjut6caxr000bb0al9uymbup6","tag_id":"cjut6cay3000mb0alxterk6fm","_id":"cjut6cayl001fb0alr46tw8x7"},{"post_id":"cjut6caxr000bb0al9uymbup6","tag_id":"cjut6cayk001cb0albug4k2cp","_id":"cjut6cayl001hb0alj0i7uoh1"},{"post_id":"cjut6caxt000cb0al0q223f6k","tag_id":"cjut6cayk001db0al7d0r2caq","_id":"cjut6caym001jb0ale3p4qnp3"},{"post_id":"cjut6caxt000cb0al0q223f6k","tag_id":"cjut6cayl001gb0aldacguhb7","_id":"cjut6cayn001kb0al4wa14y8e"},{"post_id":"cjut6caxy000gb0albyfg6wzu","tag_id":"cjut6cay3000mb0alxterk6fm","_id":"cjut6cayn001mb0alndtua6ot"},{"post_id":"cjut6cay1000ib0algbqq3wsk","tag_id":"cjut6cayn001lb0al6hrf1bvq","_id":"cjut6cayp001pb0alzp8bpubu"},{"post_id":"cjut6cay1000ib0algbqq3wsk","tag_id":"cjut6cayo001nb0alq5zu4oe4","_id":"cjut6cayq001qb0al7ow6400g"},{"post_id":"cjut6cay1000ib0algbqq3wsk","tag_id":"cjut6caxq000ab0alya1k3pne","_id":"cjut6cayq001sb0alun4e5i4t"},{"post_id":"cjut6cay4000nb0almykcdfi8","tag_id":"cjut6caxw000fb0alllxpvl78","_id":"cjut6cayr001ub0ale7k5an24"},{"post_id":"cjut6cay4000nb0almykcdfi8","tag_id":"cjut6cayk001db0al7d0r2caq","_id":"cjut6cayr001vb0aldlnui64l"},{"post_id":"cjut6cay4000nb0almykcdfi8","tag_id":"cjut6cayq001rb0aluwkb2nz7","_id":"cjut6cays001wb0albmv0c5hh"},{"post_id":"cjut6cay6000pb0alc9cyygyi","tag_id":"cjut6cayr001tb0alki50ufdd","_id":"cjut6cays001xb0algzwm20sy"},{"post_id":"cjut6cayy001yb0altslbsbug","tag_id":"cjut6cay3000mb0alxterk6fm","_id":"cjut6caz30024b0alk3p8ar5o"},{"post_id":"cjut6cayy001yb0altslbsbug","tag_id":"cjut6caz20021b0ald0eampxm","_id":"cjut6caz40025b0ald9rinrww"},{"post_id":"cjut6cayy001yb0altslbsbug","tag_id":"cjut6caz30023b0alxbnunomv","_id":"cjut6caz40026b0alnwst28wa"}],"Tag":[{"name":"Linux","_id":"cjut6caxk0005b0al37w2zi6q"},{"name":"shell","_id":"cjut6caxq000ab0alya1k3pne"},{"name":"UVM","_id":"cjut6caxw000fb0alllxpvl78"},{"name":"SystemVerilog","_id":"cjut6cay3000mb0alxterk6fm"},{"name":"RAL","_id":"cjut6cayk001cb0albug4k2cp"},{"name":"EDA","_id":"cjut6cayk001db0al7d0r2caq"},{"name":"gdb","_id":"cjut6cayl001gb0aldacguhb7"},{"name":"git","_id":"cjut6cayn001lb0al6hrf1bvq"},{"name":"github","_id":"cjut6cayo001nb0alq5zu4oe4"},{"name":"synopsys","_id":"cjut6cayq001rb0aluwkb2nz7"},{"name":"脚本","_id":"cjut6cayr001tb0alki50ufdd"},{"name":"ABV","_id":"cjut6caz20021b0ald0eampxm"},{"name":"FV","_id":"cjut6caz30023b0alxbnunomv"}]}}