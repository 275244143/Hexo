{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/aria/source/images/WeChatPay.png","path":"images/WeChatPay.png","modified":0,"renderable":1},{"_id":"themes/aria/source/images/logo.png","path":"images/logo.png","modified":0,"renderable":1},{"_id":"themes/aria/source/images/avatar.png","path":"images/avatar.png","modified":0,"renderable":1},{"_id":"themes/aria/source/js/busuanzi.pure.mini.js","path":"js/busuanzi.pure.mini.js","modified":0,"renderable":1},{"_id":"themes/aria/source/js/clipboard.min.js","path":"js/clipboard.min.js","modified":0,"renderable":1},{"_id":"themes/aria/source/js/commentjs.js","path":"js/commentjs.js","modified":0,"renderable":1},{"_id":"themes/aria/source/js/custom.js","path":"js/custom.js","modified":0,"renderable":1},{"_id":"themes/aria/source/js/highlight.min.js","path":"js/highlight.min.js","modified":0,"renderable":1},{"_id":"themes/aria/source/js/index.js","path":"js/index.js","modified":0,"renderable":1},{"_id":"themes/aria/source/js/lg-fullscreen.min.js","path":"js/lg-fullscreen.min.js","modified":0,"renderable":1},{"_id":"themes/aria/source/js/lg-hash.min.js","path":"js/lg-hash.min.js","modified":0,"renderable":1},{"_id":"themes/aria/source/js/lg-pager.min.js","path":"js/lg-pager.min.js","modified":0,"renderable":1},{"_id":"themes/aria/source/js/lg-zoom.min.js","path":"js/lg-zoom.min.js","modified":0,"renderable":1},{"_id":"themes/aria/source/js/lg-thumbnail.min.js","path":"js/lg-thumbnail.min.js","modified":0,"renderable":1},{"_id":"themes/aria/source/js/lightgallery.min.js","path":"js/lightgallery.min.js","modified":0,"renderable":1},{"_id":"themes/aria/source/js/marked.min.js","path":"js/marked.min.js","modified":0,"renderable":1},{"_id":"themes/aria/source/js/scrollspy.js","path":"js/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/aria/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/aria/source/js/timeago.min.js","path":"js/timeago.min.js","modified":0,"renderable":1},{"_id":"themes/aria/source/js/util.js","path":"js/util.js","modified":0,"renderable":1},{"_id":"themes/aria/source/css/atom-one-dark.css","path":"css/atom-one-dark.css","modified":0,"renderable":1},{"_id":"themes/aria/source/css/atom-one-light.css","path":"css/atom-one-light.css","modified":0,"renderable":1},{"_id":"themes/aria/source/css/comment.styl","path":"css/comment.styl","modified":0,"renderable":1},{"_id":"themes/aria/source/css/commentjs.css","path":"css/commentjs.css","modified":0,"renderable":1},{"_id":"themes/aria/source/css/custom.styl","path":"css/custom.styl","modified":0,"renderable":1},{"_id":"themes/aria/source/css/header.styl","path":"css/header.styl","modified":0,"renderable":1},{"_id":"themes/aria/source/css/footer.styl","path":"css/footer.styl","modified":0,"renderable":1},{"_id":"themes/aria/source/css/index.styl","path":"css/index.styl","modified":0,"renderable":1},{"_id":"themes/aria/source/css/info.styl","path":"css/info.styl","modified":0,"renderable":1},{"_id":"themes/aria/source/css/lightgallery.min.css","path":"css/lightgallery.min.css","modified":0,"renderable":1},{"_id":"themes/aria/source/css/normalize.css","path":"css/normalize.css","modified":0,"renderable":1},{"_id":"themes/aria/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/aria/source/css/page.styl","path":"css/page.styl","modified":0,"renderable":1},{"_id":"themes/aria/source/css/post.styl","path":"css/post.styl","modified":0,"renderable":1},{"_id":"themes/aria/source/css/reward.styl","path":"css/reward.styl","modified":0,"renderable":1},{"_id":"themes/aria/source/css/sidebar.styl","path":"css/sidebar.styl","modified":0,"renderable":1},{"_id":"themes/aria/source/css/solarized-dark.css","path":"css/solarized-dark.css","modified":0,"renderable":1},{"_id":"themes/aria/source/css/variables.styl","path":"css/variables.styl","modified":0,"renderable":1},{"_id":"themes/aria/source/fonts/lg.eot","path":"fonts/lg.eot","modified":0,"renderable":1},{"_id":"themes/aria/source/fonts/lg.ttf","path":"fonts/lg.ttf","modified":0,"renderable":1},{"_id":"themes/aria/source/css/solarized-light.css","path":"css/solarized-light.css","modified":0,"renderable":1},{"_id":"themes/aria/source/fonts/lg.woff","path":"fonts/lg.woff","modified":0,"renderable":1},{"_id":"themes/aria/source/fonts/lg.svg","path":"fonts/lg.svg","modified":0,"renderable":1},{"_id":"themes/aria/source/css/nav.styl","path":"css/nav.styl","modified":0,"renderable":1},{"_id":"themes/aria/source/js/jquery.min.js","path":"js/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/aria/source/images/background.png","path":"images/background.png","modified":0,"renderable":1},{"_id":"themes/aria/source/js/fontawesome-all.min.js","path":"js/fontawesome-all.min.js","modified":0,"renderable":1}],"Cache":[{"_id":"themes/aria/README.md","hash":"efc87a35b4dd92458d46414d44fadc4320e8628f","modified":1555493085785},{"_id":"themes/aria/LICENSE","hash":"b314c7ebb7d599944981908b7f3ed33a30e78f3a","modified":1555493085783},{"_id":"themes/aria/README.zh_CN.md","hash":"c9c9d6ef5401aa7f806b4cc4bea9facc26ccf724","modified":1555493085786},{"_id":"themes/aria/_config.yml","hash":"c972534a4bd0686c31ef79c51ca2fb1abf1d57f0","modified":1555568197868},{"_id":"themes/aria/package.json","hash":"5b2ace3e57e7ca95420ecc061ff073eda89664b5","modified":1555493085803},{"_id":"themes/aria/_config.yml.example","hash":"b0b73c6cce2dac9fce940ad3630d848bc7b207ae","modified":1555493085787},{"_id":"source/_posts/Linux相关操作.md","hash":"7acda6e49758b97c612e7655d37b0b6670f95dbb","modified":1555643737404},{"_id":"source/_posts/UVM-Register-Model.md","hash":"a9bcdb00813ac2fbc576dd5d2014f7359a841258","modified":1555550357885},{"_id":"source/_posts/QQ红包打赏,验证技术微信公众号，扫码即可，你的支持，就是技术的不断前进！.md","hash":"68840c9d6621c0bce2b440625a822ea6eeec5d6f","modified":1555471884157},{"_id":"source/_posts/UVM寄存器模型中soft和hard-reset有什么区别？.md","hash":"3e7bb7b9726c2299d275db59dc3c8b98a1d25104","modified":1555553388555},{"_id":"source/_posts/形式验证.md","hash":"d92aa0792800997a819ae3805ab8f72288cd784e","modified":1555550621987},{"_id":"source/_posts/qrcode_20190416165009.png","hash":"ab7be92bf51a30826adeb4e0767c7c99ebdf172b","modified":1555645691272},{"_id":"source/_posts/clocking块为什么能保证race-free.md","hash":"580a430276f8d74556ce6a6f8fc8d96a95a956d8","modified":1555579822663},{"_id":"source/tags/index.md","hash":"8fea9f2f66b043c6ee6d21be33ec13e0fa456dc2","modified":1555550167297},{"_id":"source/categories/index.md","hash":"0b1db8166c1e04405c111d46802f27072ae9c3ed","modified":1555550195259},{"_id":"source/_posts/SystemVerilog语法释义.md","hash":"9bc8af557bdceb8ed0509f8b16eb573f57d4a2fa","modified":1555561577027},{"_id":"source/_posts/VCS-Crash如何定位？.md","hash":"0e14572d0747159db5dbbf3a76061fd13b4a92d2","modified":1555639830411},{"_id":"themes/aria/languages/zh_CN.yml","hash":"78e2c45c05062203df3c31472cc94e861494f80f","modified":1555493085789},{"_id":"themes/aria/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1555493085788},{"_id":"themes/aria/languages/en.yml","hash":"ab81f3ccb132625a81c28f19c760a18a46838dfe","modified":1555493085788},{"_id":"themes/aria/languages/zh_TW.yml","hash":"d2520872c650b2cc1e7450a7bb476a162e6deb0d","modified":1555493085791},{"_id":"themes/aria/languages/zh_HK.yml","hash":"b17246baa97115b39a02a5c91d0f388dcbc8b339","modified":1555493085790},{"_id":"themes/aria/layout/_layout.njk","hash":"d015e9f665bb3a7c45c8c787101be199484456a5","modified":1555493085792},{"_id":"themes/aria/layout/categories.njk","hash":"231d1fa407836245331659479cd12b3e803e7fe0","modified":1555493085793},{"_id":"themes/aria/layout/archive.njk","hash":"b1a66de640bbbd1ff7c6ecaf99e2f545b123fa85","modified":1555493085792},{"_id":"themes/aria/layout/category.njk","hash":"7ab9a47f75d9bd83b3ced1a805d44a952bb3b675","modified":1555493085794},{"_id":"themes/aria/layout/footer.njk","hash":"980f4ad22f2cf8b5c0599e433d20efa09a532287","modified":1555568917991},{"_id":"themes/aria/layout/comment.njk","hash":"9361ffce5b9b62fc22e45a037618486dae2cf23b","modified":1555572315778},{"_id":"themes/aria/layout/header.njk","hash":"2fb823c697702f065ffbaf17d92888c8ca0839d7","modified":1555569183592},{"_id":"themes/aria/layout/index.njk","hash":"d3acaac5908cd41b106f8d0bc0d09a4b3dde0df5","modified":1555570866525},{"_id":"themes/aria/layout/info.njk","hash":"8eedd696aff1c56c21f6cfa6bc532b34567cf6c1","modified":1555493085798},{"_id":"themes/aria/layout/page.njk","hash":"19147f4f85c89fbce8d215986a99e743f451a3f1","modified":1555569017083},{"_id":"themes/aria/layout/reward.njk","hash":"92d2646b593bbffccd0c9daf0f90828f17d14ab4","modified":1555493085800},{"_id":"themes/aria/layout/post.njk","hash":"1e288a91c1787db9e353029386bb2cc511f9368a","modified":1555493085799},{"_id":"themes/aria/layout/sidebar.njk","hash":"c4eadc5c82e3ff26be6d94acec9a8c4fbe7caa96","modified":1555493085801},{"_id":"themes/aria/layout/tag.njk","hash":"653093fc9ce3cfd3c6d68685d5c0fd9b763d2ed2","modified":1555569715257},{"_id":"themes/aria/layout/tags.njk","hash":"fe2150ec15caa109f2d67e8a1e77e16821acb0cf","modified":1555569780831},{"_id":"themes/aria/scripts/regexp-tags.js","hash":"72227879bc9a543628661ff121965062f105e0d8","modified":1555493085804},{"_id":"themes/aria/source/images/WeChatPay.png","hash":"ab7be92bf51a30826adeb4e0767c7c99ebdf172b","modified":1555404629310},{"_id":"themes/aria/source/images/logo.png","hash":"67ce91490bbe3fb41be589af15c2ecbd63b3791f","modified":1555498208584},{"_id":"themes/aria/source/images/avatar.png","hash":"ee31a019fd96f909af9eaa24bd5a61a8587ddef8","modified":1555494212791},{"_id":"themes/aria/source/js/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1555493085831},{"_id":"themes/aria/source/js/clipboard.min.js","hash":"dc144353ec85169bb3c5f3c6d68b4e75f9bf28ea","modified":1555493085832},{"_id":"themes/aria/source/js/commentjs.js","hash":"4a86e2daea116dc875445fe31815f0f43a8a7c78","modified":1555493085832},{"_id":"themes/aria/source/js/custom.js","hash":"4d04585e457716454ccb46843a7ff903981f7438","modified":1555493085834},{"_id":"themes/aria/source/js/highlight.min.js","hash":"a8442546e96c3c319f4298bfb2fab7060d389f50","modified":1555493085845},{"_id":"themes/aria/source/js/index.js","hash":"83f17690cf6be124187bbec321592b0b1d8062e0","modified":1555493085846},{"_id":"themes/aria/source/js/lg-fullscreen.min.js","hash":"70c5a8c3598c19af1a50a7e5d1567483fb63c3c5","modified":1555493085848},{"_id":"themes/aria/source/js/lg-hash.min.js","hash":"52c10707088f9fcbdef6a7974d31de2b6190a679","modified":1555493085849},{"_id":"themes/aria/source/js/lg-pager.min.js","hash":"6f7572b2a27d1b4902eda27882c01e608ae59e06","modified":1555493085849},{"_id":"themes/aria/source/js/lg-zoom.min.js","hash":"8f22823a55f11dc651700f59318fffd65eb47692","modified":1555493085850},{"_id":"themes/aria/source/js/lg-thumbnail.min.js","hash":"703c7d187625f4cf16891748250b00aeb6ca5479","modified":1555493085850},{"_id":"themes/aria/source/js/lightgallery.min.js","hash":"5fac1b0ebb11c99e2ac268b19ed172191e55d23d","modified":1555493085851},{"_id":"themes/aria/source/js/marked.min.js","hash":"00b4113ded8994ff7b495c36e013a19bc142375e","modified":1555493085852},{"_id":"themes/aria/source/js/scrollspy.js","hash":"2eafc89dae69269d6d4c47d7bd746e717bd38230","modified":1555493085853},{"_id":"themes/aria/source/js/search.js","hash":"a38041aa761971a1cfe18bf6b6474e3d9412c065","modified":1555493085853},{"_id":"themes/aria/source/js/timeago.min.js","hash":"d220fcc47be00effec6b5181b97cc0929d10031e","modified":1555493085854},{"_id":"themes/aria/source/js/util.js","hash":"bb56df6fc3768eb27d20ca7eab92c9654397d25e","modified":1555493085855},{"_id":"themes/aria/source/css/atom-one-dark.css","hash":"91671ed42c0ce1363843144a9666d34faddb7e27","modified":1555493085806},{"_id":"themes/aria/source/css/atom-one-light.css","hash":"e432dc56345e4c5e74baffb36ea1b72f469ec2b5","modified":1555493085806},{"_id":"themes/aria/source/css/comment.styl","hash":"2db33daa184a980aa83733c51c5e53159474f123","modified":1555493085807},{"_id":"themes/aria/source/css/commentjs.css","hash":"c9121d34acb984b285f6e3ff17c1757cf76dad09","modified":1555493085808},{"_id":"themes/aria/source/css/custom.styl","hash":"38ce5ca0147b93e89d56b76064267c874685b2fe","modified":1555493085809},{"_id":"themes/aria/source/css/header.styl","hash":"c59f08a5edb4c91830b55da1c3b7e35ce7ac0b6d","modified":1555493085811},{"_id":"themes/aria/source/css/footer.styl","hash":"8419751222b2dec293e78deca1f3d6bac69d8968","modified":1555493085810},{"_id":"themes/aria/source/css/index.styl","hash":"aa5892e510f4f253e3c668d9d2a5d2c4e813a5a3","modified":1555493085811},{"_id":"themes/aria/source/css/info.styl","hash":"d39f52598109c96a39b24962499c3c4d17b92aed","modified":1555493085812},{"_id":"themes/aria/source/css/lightgallery.min.css","hash":"9e76bdad163856774a96b1230a08dc506600a973","modified":1555493085813},{"_id":"themes/aria/source/css/normalize.css","hash":"826bdf28095ebc25f5be69d58eadfc9e1b49b7f7","modified":1555493085815},{"_id":"themes/aria/source/css/main.styl","hash":"82ec2e07158ba9c114bbde3b2b94d7dc4aaad0f8","modified":1555493085814},{"_id":"themes/aria/source/css/page.styl","hash":"dc76eb2d489ab66950120c849e98ebdce21ba167","modified":1555493085816},{"_id":"themes/aria/source/css/post.styl","hash":"f35475bac616276916673a837931cf017e7d544b","modified":1555493085816},{"_id":"themes/aria/source/css/reward.styl","hash":"2e95f749d4750052c6a3b5cf79679c51453e7f2b","modified":1555493085817},{"_id":"themes/aria/source/css/sidebar.styl","hash":"7f62abecf246460d8debdb9c018086d66472672c","modified":1555493085818},{"_id":"themes/aria/source/css/solarized-dark.css","hash":"97bba4362e3001a93f1b111a140895cbe6047a81","modified":1555493085819},{"_id":"themes/aria/source/css/variables.styl","hash":"eb65f4b33bd8b2ec5dc256f1744e450384d4652e","modified":1555493085820},{"_id":"themes/aria/source/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1555493085822},{"_id":"themes/aria/source/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1555493085824},{"_id":"themes/aria/source/css/solarized-light.css","hash":"fe6779c179c3e6136384e463fdc6d3b08ff88ba7","modified":1555493085820},{"_id":"themes/aria/source/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1555493085824},{"_id":"themes/aria/source/fonts/lg.svg","hash":"1dba95664d2933fe1c22fb95a2e1e3a21839870b","modified":1555493085823},{"_id":"themes/aria/source/css/nav.styl","hash":"c76ff6ef6c2cda6662bd2a7adc480788e9dbbde4","modified":1555493085814},{"_id":"themes/aria/source/js/jquery.min.js","hash":"0c3192b500a4fd550e483cf77a49806a5872185b","modified":1555493085847},{"_id":"themes/aria/ARIA.png","hash":"4d9349d81236b2ad3384d92b5af789aafe71926e","modified":1555493085782},{"_id":"themes/aria/source/images/background.png","hash":"c34366140a0250afbd73d62abdc58b1e00e10355","modified":1555493085829},{"_id":"themes/aria/source/js/fontawesome-all.min.js","hash":"4dc5c54d10fc5c7eada0464e6060002a12859af7","modified":1555493085844}],"Category":[{"name":"Linux","_id":"cjunjb1l30002l8alt7kjgwuh"},{"name":"验证","_id":"cjunjb1la0006l8al530pw7gt"},{"name":"UVM-RAL","parent":"cjunjb1la0006l8al530pw7gt","_id":"cjunjb1lh000dl8alg9tpg6w9"}],"Data":[],"Page":[{"title":"categories","date":"2019-04-18T01:15:37.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2019-04-18 09:15:37\ntype: \"categories\"\ncomments: false\n---\n","updated":"2019-04-18T01:16:35.259Z","path":"categories/index.html","layout":"page","_id":"cjunjb1lr000tl8alllxql2yy","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2019-04-18T01:15:22.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2019-04-18 09:15:22\ntype: \"tags\"\ncomments: false\n---\n","updated":"2019-04-18T01:16:07.297Z","path":"tags/index.html","layout":"page","_id":"cjunjb1lt000vl8alpafijire","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Linux 查找指定名称的进程并显示进程详细信息","author":"神秘人","date":"2019-04-19T03:10:00.000Z","_content":"\n### 给定一个进程名称特征串，查找所有匹配该进程名称的进程的详细信息。\n\n<font color=blue>\n\n(1) 先用pgrep [str] 命令进行模糊匹配，找到匹配该特征串的进程ID；\n\n(2) 其次根据进程ID显示指定的进程信息，ps --pid [pid]；\n\n(3) 因为查找出来的进程ID需要被作为参数传递给ps命令，故使用xargs命令，通过管道符号连接；\n\n(4) 最后显示进程详细信息，需要加上-u参数。\n\n最终命令形如:\n\npgrep ncsim | xargs ps -u --pid\n</color>","source":"_posts/Linux相关操作.md","raw":"title: Linux 查找指定名称的进程并显示进程详细信息\nauthor: 神秘人\ntags:\n  - Linux\n  - shell\ncategories:\n  - Linux\ndate: 2019-04-19 11:10:00\n---\n\n### 给定一个进程名称特征串，查找所有匹配该进程名称的进程的详细信息。\n\n<font color=blue>\n\n(1) 先用pgrep [str] 命令进行模糊匹配，找到匹配该特征串的进程ID；\n\n(2) 其次根据进程ID显示指定的进程信息，ps --pid [pid]；\n\n(3) 因为查找出来的进程ID需要被作为参数传递给ps命令，故使用xargs命令，通过管道符号连接；\n\n(4) 最后显示进程详细信息，需要加上-u参数。\n\n最终命令形如:\n\npgrep ncsim | xargs ps -u --pid\n</color>","slug":"Linux相关操作","published":1,"updated":"2019-04-19T03:15:37.404Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjunjb1kt0000l8alci9xvlsf","content":"<h3 id=\"给定一个进程名称特征串，查找所有匹配该进程名称的进程的详细信息。\"><a href=\"#给定一个进程名称特征串，查找所有匹配该进程名称的进程的详细信息。\" class=\"headerlink\" title=\"给定一个进程名称特征串，查找所有匹配该进程名称的进程的详细信息。\"></a>给定一个进程名称特征串，查找所有匹配该进程名称的进程的详细信息。</h3><font color=\"blue\">\n\n<p>(1) 先用pgrep [str] 命令进行模糊匹配，找到匹配该特征串的进程ID；</p>\n<p>(2) 其次根据进程ID显示指定的进程信息，ps –pid [pid]；</p>\n<p>(3) 因为查找出来的进程ID需要被作为参数传递给ps命令，故使用xargs命令，通过管道符号连接；</p>\n<p>(4) 最后显示进程详细信息，需要加上-u参数。</p>\n<p>最终命令形如:</p>\n<p>pgrep ncsim | xargs ps -u –pid<br></p>\n</font>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"给定一个进程名称特征串，查找所有匹配该进程名称的进程的详细信息。\"><a href=\"#给定一个进程名称特征串，查找所有匹配该进程名称的进程的详细信息。\" class=\"headerlink\" title=\"给定一个进程名称特征串，查找所有匹配该进程名称的进程的详细信息。\"></a>给定一个进程名称特征串，查找所有匹配该进程名称的进程的详细信息。</h3><font color=\"blue\">\n\n<p>(1) 先用pgrep [str] 命令进行模糊匹配，找到匹配该特征串的进程ID；</p>\n<p>(2) 其次根据进程ID显示指定的进程信息，ps –pid [pid]；</p>\n<p>(3) 因为查找出来的进程ID需要被作为参数传递给ps命令，故使用xargs命令，通过管道符号连接；</p>\n<p>(4) 最后显示进程详细信息，需要加上-u参数。</p>\n<p>最终命令形如:</p>\n<p>pgrep ncsim | xargs ps -u –pid<br></p>\n</font>"},{"title":"QQ红包打赏,验证技术微信公众号，扫码即可，你的支持，就是技术的不断前进！","date":"2019-04-16T08:52:08.000Z","_content":"# 谢谢打赏 #\n![QQ](https://github.com/275244143/picBed/blob/master/QQ%E5%9B%BE%E7%89%8720190416222833.png?raw=true)\n# 验证技术公众号（Ricky友情支持） #\n![WEBCHAT](https://github.com/275244143/picBed/blob/master/QQ%E5%9B%BE%E7%89%8720190416224606.jpg?raw=true)\n\n","source":"_posts/QQ红包打赏,验证技术微信公众号，扫码即可，你的支持，就是技术的不断前进！.md","raw":"---\ntitle: QQ红包打赏,验证技术微信公众号，扫码即可，你的支持，就是技术的不断前进！\ndate: 2019-04-16 16:52:08\ntags:\n---\n# 谢谢打赏 #\n![QQ](https://github.com/275244143/picBed/blob/master/QQ%E5%9B%BE%E7%89%8720190416222833.png?raw=true)\n# 验证技术公众号（Ricky友情支持） #\n![WEBCHAT](https://github.com/275244143/picBed/blob/master/QQ%E5%9B%BE%E7%89%8720190416224606.jpg?raw=true)\n\n","slug":"QQ红包打赏,验证技术微信公众号，扫码即可，你的支持，就是技术的不断前进！","published":1,"updated":"2019-04-17T03:31:24.157Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjunjb1l00001l8alyixzl37s","content":"<h1 id=\"谢谢打赏\"><a href=\"#谢谢打赏\" class=\"headerlink\" title=\"谢谢打赏\"></a>谢谢打赏</h1><p><img src=\"https://github.com/275244143/picBed/blob/master/QQ%E5%9B%BE%E7%89%8720190416222833.png?raw=true\" alt=\"QQ\"></p>\n<h1 id=\"验证技术公众号（Ricky友情支持）\"><a href=\"#验证技术公众号（Ricky友情支持）\" class=\"headerlink\" title=\"验证技术公众号（Ricky友情支持）\"></a>验证技术公众号（Ricky友情支持）</h1><p><img src=\"https://github.com/275244143/picBed/blob/master/QQ%E5%9B%BE%E7%89%8720190416224606.jpg?raw=true\" alt=\"WEBCHAT\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"谢谢打赏\"><a href=\"#谢谢打赏\" class=\"headerlink\" title=\"谢谢打赏\"></a>谢谢打赏</h1><p><img src=\"https://github.com/275244143/picBed/blob/master/QQ%E5%9B%BE%E7%89%8720190416222833.png?raw=true\" alt=\"QQ\"></p>\n<h1 id=\"验证技术公众号（Ricky友情支持）\"><a href=\"#验证技术公众号（Ricky友情支持）\" class=\"headerlink\" title=\"验证技术公众号（Ricky友情支持）\"></a>验证技术公众号（Ricky友情支持）</h1><p><img src=\"https://github.com/275244143/picBed/blob/master/QQ%E5%9B%BE%E7%89%8720190416224606.jpg?raw=true\" alt=\"WEBCHAT\"></p>\n"},{"title":"UVM寄存器模型中soft和hard reset有什么区别？","date":"2019-04-18T01:39:46.000Z","_content":"## 1.Kind = \"HARD\" or \"SOFT\"\n寄存器模型中复位操作这个到底有什么作用呢？源码如下：\n\n<font color=red>\n代码例子：\n<pre name=\"code\" class=\"systemverilog\">  \t\nfunction void uvm_reg_xxx::reset(string kind = \"HARD\");\n\tif (!m_reset.exists(kind))\n  \t\treturn;\n\tm_mirrored = m_reset[kind];\n\tm_desired  = m_mirrored;\n\tvalue      = m_mirrored;\n\tif (kind == \"HARD\")\n\t\tm_written  = 0;\nendfunction: reset\n</pre>\n</font> \n<font color=blue>\n其实是作为特别处理用的，如果所有的寄存器都只有一个复位的时候默认一个HARD值统一复位。\n如果某个寄存器需要特殊的复位，则可以重写该类中的reset（…）方法：\n代码例子：\n<pre name=\"code\" class=\"systemverilog\">  \t\t\nclass some_reg extends uvm_reg;\n    ...\n\tfunction void reset(string kind = \"HARD\");\n\t\tif (kind != \"SOFT\")\n\t\t\tsuper.reset(kind);\n\tendfunction\n\nendclass\n</pre>   \n</font> \n","source":"_posts/UVM寄存器模型中soft和hard-reset有什么区别？.md","raw":"---\ntitle: UVM寄存器模型中soft和hard reset有什么区别？\ndate: 2019-04-18 09:39:46\ntags: [UVM,SystemVerilog,RAL]\ncategories: [验证,UVM-RAL]\n---\n## 1.Kind = \"HARD\" or \"SOFT\"\n寄存器模型中复位操作这个到底有什么作用呢？源码如下：\n\n<font color=red>\n代码例子：\n<pre name=\"code\" class=\"systemverilog\">  \t\nfunction void uvm_reg_xxx::reset(string kind = \"HARD\");\n\tif (!m_reset.exists(kind))\n  \t\treturn;\n\tm_mirrored = m_reset[kind];\n\tm_desired  = m_mirrored;\n\tvalue      = m_mirrored;\n\tif (kind == \"HARD\")\n\t\tm_written  = 0;\nendfunction: reset\n</pre>\n</font> \n<font color=blue>\n其实是作为特别处理用的，如果所有的寄存器都只有一个复位的时候默认一个HARD值统一复位。\n如果某个寄存器需要特殊的复位，则可以重写该类中的reset（…）方法：\n代码例子：\n<pre name=\"code\" class=\"systemverilog\">  \t\t\nclass some_reg extends uvm_reg;\n    ...\n\tfunction void reset(string kind = \"HARD\");\n\t\tif (kind != \"SOFT\")\n\t\t\tsuper.reset(kind);\n\tendfunction\n\nendclass\n</pre>   \n</font> \n","slug":"UVM寄存器模型中soft和hard-reset有什么区别？","published":1,"updated":"2019-04-18T02:09:48.555Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjunjb1l70004l8almks4vuhs","content":"<h2 id=\"1-Kind-“HARD”-or-“SOFT”\"><a href=\"#1-Kind-“HARD”-or-“SOFT”\" class=\"headerlink\" title=\"1.Kind = “HARD” or “SOFT”\"></a>1.Kind = “HARD” or “SOFT”</h2><p>寄存器模型中复位操作这个到底有什么作用呢？源码如下：</p>\n<font color=\"red\"><br>代码例子：<br><pre name=\"code\" class=\"systemverilog\"><br>function void uvm_reg_xxx::reset(string kind = “HARD”);<br>    if (!m_reset.exists(kind))<br>          return;<br>    m_mirrored = m_reset[kind];<br>    m_desired  = m_mirrored;<br>    value      = m_mirrored;<br>    if (kind == “HARD”)<br>        m_written  = 0;<br>endfunction: reset<br></pre><br></font><br><font color=\"blue\"><br>其实是作为特别处理用的，如果所有的寄存器都只有一个复位的时候默认一个HARD值统一复位。<br>如果某个寄存器需要特殊的复位，则可以重写该类中的reset（…）方法：<br>代码例子：<br><pre name=\"code\" class=\"systemverilog\"><br>class some_reg extends uvm_reg;<br>    …<br>    function void reset(string kind = “HARD”);<br>        if (kind != “SOFT”)<br>            super.reset(kind);<br>    endfunction<br><br>endclass<br></pre><br></font> \n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-Kind-“HARD”-or-“SOFT”\"><a href=\"#1-Kind-“HARD”-or-“SOFT”\" class=\"headerlink\" title=\"1.Kind = “HARD” or “SOFT”\"></a>1.Kind = “HARD” or “SOFT”</h2><p>寄存器模型中复位操作这个到底有什么作用呢？源码如下：</p>\n<font color=\"red\"><br>代码例子：<br><pre name=\"code\" class=\"systemverilog\"><br>function void uvm_reg_xxx::reset(string kind = “HARD”);<br>    if (!m_reset.exists(kind))<br>          return;<br>    m_mirrored = m_reset[kind];<br>    m_desired  = m_mirrored;<br>    value      = m_mirrored;<br>    if (kind == “HARD”)<br>        m_written  = 0;<br>endfunction: reset<br></pre><br></font><br><font color=\"blue\"><br>其实是作为特别处理用的，如果所有的寄存器都只有一个复位的时候默认一个HARD值统一复位。<br>如果某个寄存器需要特殊的复位，则可以重写该类中的reset（…）方法：<br>代码例子：<br><pre name=\"code\" class=\"systemverilog\"><br>class some_reg extends uvm_reg;<br>    …<br>    function void reset(string kind = “HARD”);<br>        if (kind != “SOFT”)<br>            super.reset(kind);<br>    endfunction<br><br>endclass<br></pre><br></font> \n"},{"title":"形式验证","date":"2019-04-17T03:15:24.000Z","_content":"## 1.什么时候需要使用形式验证（Formal Verification：FV）\n\n1.1 **FV FOR COMPLETE COVERAGE：**\n\n\tWhen you want to get complete coverage of design behaviors, consider using FV as your primary validation method.\n\t注释：\n\t\t当你需要100%覆盖功能时。例如：32bit * 32bit 乘法器，需要每个数字都要进行cover。\n\t\n\n1.2 **FV for Bug Hunting：**\n\n\tWhen you have a design with nontrivial logic and are worried that you will not be able to get sufficient coverage with simulation tests, think about FV as a supplement to simulation.\n\t注释：\n\t\t担心无法获得足够的仿真测试覆盖时，可以考虑将FV作为补充，增强tapout信心。\n\n1.3 **FV for Exploring Designs：**\n\n\tWhen you have a design where you can easily specify interesting states or outputs, but it is difficult or time-consuming to specify the sequence of inputs needed to get there, think about using FV.\n\t注释：\n\t\t虽然设计简单，如一些MUX组合，但很难或费时地指定需要的输入序列，可以考虑使用FV。\n","source":"_posts/形式验证.md","raw":"---\ntitle: 形式验证\ndate: 2019-04-17 11:15:24\ntags: [SystemVerilog,ABV,FV]\ncategories: 验证\n---\n## 1.什么时候需要使用形式验证（Formal Verification：FV）\n\n1.1 **FV FOR COMPLETE COVERAGE：**\n\n\tWhen you want to get complete coverage of design behaviors, consider using FV as your primary validation method.\n\t注释：\n\t\t当你需要100%覆盖功能时。例如：32bit * 32bit 乘法器，需要每个数字都要进行cover。\n\t\n\n1.2 **FV for Bug Hunting：**\n\n\tWhen you have a design with nontrivial logic and are worried that you will not be able to get sufficient coverage with simulation tests, think about FV as a supplement to simulation.\n\t注释：\n\t\t担心无法获得足够的仿真测试覆盖时，可以考虑将FV作为补充，增强tapout信心。\n\n1.3 **FV for Exploring Designs：**\n\n\tWhen you have a design where you can easily specify interesting states or outputs, but it is difficult or time-consuming to specify the sequence of inputs needed to get there, think about using FV.\n\t注释：\n\t\t虽然设计简单，如一些MUX组合，但很难或费时地指定需要的输入序列，可以考虑使用FV。\n","slug":"形式验证","published":1,"updated":"2019-04-18T01:23:41.987Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjunjb1l90005l8al1gedeeqb","content":"<h2 id=\"1-什么时候需要使用形式验证（Formal-Verification：FV）\"><a href=\"#1-什么时候需要使用形式验证（Formal-Verification：FV）\" class=\"headerlink\" title=\"1.什么时候需要使用形式验证（Formal Verification：FV）\"></a>1.什么时候需要使用形式验证（Formal Verification：FV）</h2><p>1.1 <strong>FV FOR COMPLETE COVERAGE：</strong></p>\n<pre><code>When you want to get complete coverage of design behaviors, consider using FV as your primary validation method.\n注释：\n    当你需要100%覆盖功能时。例如：32bit * 32bit 乘法器，需要每个数字都要进行cover。\n</code></pre><p>1.2 <strong>FV for Bug Hunting：</strong></p>\n<pre><code>When you have a design with nontrivial logic and are worried that you will not be able to get sufficient coverage with simulation tests, think about FV as a supplement to simulation.\n注释：\n    担心无法获得足够的仿真测试覆盖时，可以考虑将FV作为补充，增强tapout信心。\n</code></pre><p>1.3 <strong>FV for Exploring Designs：</strong></p>\n<pre><code>When you have a design where you can easily specify interesting states or outputs, but it is difficult or time-consuming to specify the sequence of inputs needed to get there, think about using FV.\n注释：\n    虽然设计简单，如一些MUX组合，但很难或费时地指定需要的输入序列，可以考虑使用FV。\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-什么时候需要使用形式验证（Formal-Verification：FV）\"><a href=\"#1-什么时候需要使用形式验证（Formal-Verification：FV）\" class=\"headerlink\" title=\"1.什么时候需要使用形式验证（Formal Verification：FV）\"></a>1.什么时候需要使用形式验证（Formal Verification：FV）</h2><p>1.1 <strong>FV FOR COMPLETE COVERAGE：</strong></p>\n<pre><code>When you want to get complete coverage of design behaviors, consider using FV as your primary validation method.\n注释：\n    当你需要100%覆盖功能时。例如：32bit * 32bit 乘法器，需要每个数字都要进行cover。\n</code></pre><p>1.2 <strong>FV for Bug Hunting：</strong></p>\n<pre><code>When you have a design with nontrivial logic and are worried that you will not be able to get sufficient coverage with simulation tests, think about FV as a supplement to simulation.\n注释：\n    担心无法获得足够的仿真测试覆盖时，可以考虑将FV作为补充，增强tapout信心。\n</code></pre><p>1.3 <strong>FV for Exploring Designs：</strong></p>\n<pre><code>When you have a design where you can easily specify interesting states or outputs, but it is difficult or time-consuming to specify the sequence of inputs needed to get there, think about using FV.\n注释：\n    虽然设计简单，如一些MUX组合，但很难或费时地指定需要的输入序列，可以考虑使用FV。\n</code></pre>"},{"title":"clocking块为什么能保证race free?","date":"2019-04-18T09:19:13.000Z","_content":"## 为啥要推荐使用clocking块？\n\n<font color=red>\n代码例子：\n<pre name=\"code\" class=\"systemverilog\">  \t\n\nclocking cb @(negedge clk);\n  input v;\nendclocking \n\nalways @(cb) $display(cb.v);//采样old值\n\nalways @(negedge clk) $display(cb.v);//采样old or new值和仿真器相关。\n\n</pre>\n\n主要原因是clocking块中默认为1step采样，在clk下降沿发生时（@(cb)触发），数据已经采样了。\n而第二条always语句直接(@(negedge clk))和（@(cb)）并发，所以就有race glitch。\n\n</font> \n","source":"_posts/clocking块为什么能保证race-free.md","raw":"---\ntitle: clocking块为什么能保证race free?\ndate: 2019-04-18 17:19:13\ntags: [SystemVerilog]\ncategories: [验证]\n---\n## 为啥要推荐使用clocking块？\n\n<font color=red>\n代码例子：\n<pre name=\"code\" class=\"systemverilog\">  \t\n\nclocking cb @(negedge clk);\n  input v;\nendclocking \n\nalways @(cb) $display(cb.v);//采样old值\n\nalways @(negedge clk) $display(cb.v);//采样old or new值和仿真器相关。\n\n</pre>\n\n主要原因是clocking块中默认为1step采样，在clk下降沿发生时（@(cb)触发），数据已经采样了。\n而第二条always语句直接(@(negedge clk))和（@(cb)）并发，所以就有race glitch。\n\n</font> \n","slug":"clocking块为什么能保证race-free","published":1,"updated":"2019-04-18T09:30:22.663Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjunjb1lp000sl8alee5viocw","content":"<h2 id=\"为啥要推荐使用clocking块？\"><a href=\"#为啥要推荐使用clocking块？\" class=\"headerlink\" title=\"为啥要推荐使用clocking块？\"></a>为啥要推荐使用clocking块？</h2><font color=\"red\"><br>代码例子：<br><pre name=\"code\" class=\"systemverilog\"><br><br>clocking cb @(negedge clk);<br>  input v;<br>endclocking<br><br>always @(cb) $display(cb.v);//采样old值<br><br>always @(negedge clk) $display(cb.v);//采样old or new值和仿真器相关。<br><br></pre><br><br>主要原因是clocking块中默认为1step采样，在clk下降沿发生时（@(cb)触发），数据已经采样了。<br>而第二条always语句直接(@(negedge clk))和（@(cb)）并发，所以就有race glitch。<br><br></font> \n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"为啥要推荐使用clocking块？\"><a href=\"#为啥要推荐使用clocking块？\" class=\"headerlink\" title=\"为啥要推荐使用clocking块？\"></a>为啥要推荐使用clocking块？</h2><font color=\"red\"><br>代码例子：<br><pre name=\"code\" class=\"systemverilog\"><br><br>clocking cb @(negedge clk);<br>  input v;<br>endclocking<br><br>always @(cb) $display(cb.v);//采样old值<br><br>always @(negedge clk) $display(cb.v);//采样old or new值和仿真器相关。<br><br></pre><br><br>主要原因是clocking块中默认为1step采样，在clk下降沿发生时（@(cb)触发），数据已经采样了。<br>而第二条always语句直接(@(negedge clk))和（@(cb)）并发，所以就有race glitch。<br><br></font> \n"},{"title":"UVM-Register-Model","date":"2019-04-17T06:03:12.000Z","_content":"# 1.UVM寄存器模型相关操作引起的一些关键变化 #\n# **缩写词** #\nUMV –  Update Main Variable,  \nUMrV – Update Mirror Variable,  \nAP – Auto predict\nRDR – Read DUT Register,  \nUDR – Update DUT Register,  \nRMV – Read Main Variable\nFD – frontdoor,   \nBD – Backdoor,   *  – check if UVM_CHEK is used,   NA – Not Applicable*\n\n![](https://github.com/275244143/picBed/blob/master/uvm-reg-access.jpg?raw=true)\n","source":"_posts/UVM-Register-Model.md","raw":"---\ntitle: UVM-Register-Model\ndate: 2019-04-17 14:03:12\ntags: [UVM,SystemVerilog]\ncategories: 验证\n---\n# 1.UVM寄存器模型相关操作引起的一些关键变化 #\n# **缩写词** #\nUMV –  Update Main Variable,  \nUMrV – Update Mirror Variable,  \nAP – Auto predict\nRDR – Read DUT Register,  \nUDR – Update DUT Register,  \nRMV – Read Main Variable\nFD – frontdoor,   \nBD – Backdoor,   *  – check if UVM_CHEK is used,   NA – Not Applicable*\n\n![](https://github.com/275244143/picBed/blob/master/uvm-reg-access.jpg?raw=true)\n","slug":"UVM-Register-Model","published":1,"updated":"2019-04-18T01:19:17.885Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjunjb1ls000ul8alo4s963vb","content":"<h1 id=\"1-UVM寄存器模型相关操作引起的一些关键变化\"><a href=\"#1-UVM寄存器模型相关操作引起的一些关键变化\" class=\"headerlink\" title=\"1.UVM寄存器模型相关操作引起的一些关键变化\"></a>1.UVM寄存器模型相关操作引起的一些关键变化</h1><h1 id=\"缩写词\"><a href=\"#缩写词\" class=\"headerlink\" title=\"缩写词\"></a><strong>缩写词</strong></h1><p>UMV –  Update Main Variable,<br>UMrV – Update Mirror Variable,<br>AP – Auto predict<br>RDR – Read DUT Register,<br>UDR – Update DUT Register,<br>RMV – Read Main Variable<br>FD – frontdoor,<br>BD – Backdoor,   <em>  – check if UVM_CHEK is used,   NA – Not Applicable</em></p>\n<p><img src=\"https://github.com/275244143/picBed/blob/master/uvm-reg-access.jpg?raw=true\" alt></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"1-UVM寄存器模型相关操作引起的一些关键变化\"><a href=\"#1-UVM寄存器模型相关操作引起的一些关键变化\" class=\"headerlink\" title=\"1.UVM寄存器模型相关操作引起的一些关键变化\"></a>1.UVM寄存器模型相关操作引起的一些关键变化</h1><h1 id=\"缩写词\"><a href=\"#缩写词\" class=\"headerlink\" title=\"缩写词\"></a><strong>缩写词</strong></h1><p>UMV –  Update Main Variable,<br>UMrV – Update Mirror Variable,<br>AP – Auto predict<br>RDR – Read DUT Register,<br>UDR – Update DUT Register,<br>RMV – Read Main Variable<br>FD – frontdoor,<br>BD – Backdoor,   <em>  – check if UVM_CHEK is used,   NA – Not Applicable</em></p>\n<p><img src=\"https://github.com/275244143/picBed/blob/master/uvm-reg-access.jpg?raw=true\" alt></p>\n"},{"title":"VCS Crash如何定位？","date":"2019-04-18T14:37:37.000Z","_content":"\n\n<font color=red>\n# 编译时Crash,按照如下步骤定位： #\n\n1.vcs -gdb [options]\n\n2.run\n\n3.where\n</font> \n\n<font color=blue>\n# 运行Crash,按照如下步骤定位： #\n回复@博主\n</font> ","source":"_posts/VCS-Crash如何定位？.md","raw":"---\ntitle: VCS Crash如何定位？\ndate: 2019-04-18 22:37:37\ntags: [EDA,gdb]\ncategories: [验证]\n---\n\n\n<font color=red>\n# 编译时Crash,按照如下步骤定位： #\n\n1.vcs -gdb [options]\n\n2.run\n\n3.where\n</font> \n\n<font color=blue>\n# 运行Crash,按照如下步骤定位： #\n回复@博主\n</font> ","slug":"VCS-Crash如何定位？","published":1,"updated":"2019-04-19T02:10:30.411Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjunjb1lu000xl8allqnzwj46","content":"<font color=\"red\"><br># 编译时Crash,按照如下步骤定位： #<br><br>1.vcs -gdb [options]<br><br>2.run<br><br>3.where<br></font> \n\n<font color=\"blue\"><br># 运行Crash,按照如下步骤定位： #<br>回复@博主<br></font> ","site":{"data":{}},"excerpt":"","more":"<font color=\"red\"><br># 编译时Crash,按照如下步骤定位： #<br><br>1.vcs -gdb [options]<br><br>2.run<br><br>3.where<br></font> \n\n<font color=\"blue\"><br># 运行Crash,按照如下步骤定位： #<br>回复@博主<br></font> "},{"title":"SystemVerilog语法释义","date":"2019-04-16T08:08:43.000Z","_content":"## 1.浮点数转换\n\n### ieee1800-2017解释：\n\n\tReal numbers shall be converted to integers by rounding the real number to the nearest integer, rather than by truncating it. \n\tImplicit conversion shall take place when a real number is assigned to an integer. \n\tIf the fractional part of the real number is exactly 0.5, it shall be rounded away from zero.\n\t\n<font color=blue>\n代码例子：\n<pre name=\"code\" class=\"systemverilog\">     \t\nint x_int;\t\nx_int = 2.4;//x_int --> 2\nx_int = 2.5;//x_int --> 3\nx_int = int'(2.5);//x_int --> 2 \n</pre>   \n</font> \n\n## 2.数据比特位快速反转\n<font color=blue>\n代码例子：\n<pre name=\"code\" class=\"systemverilog\">  \t\nbit [15:0] x = 16'b0000_1011_0000_0011;\nx= { << {x} }; //x --> 16'b1100_0000_1101_0000;\n</pre>\n</font> \n\n## 3.super.super如何解决无法支持问题？\n<font color=blue>\n代码例子：\n<pre name=\"code\" class=\"systemverilog\">  \t\nmodule tb;\n\nclass A;\n    virtual function void test();\n        $display(\"%m\");\n    endfunction\nendclass\n\nclass B extends A;\n    virtual function void test();\n        $display(\"%m\");\n    endfunction\nendclass\n\nclass C extends B;\n    virtual function void test();\n        super.test();//Call B test()\n        //super.super.test();//error!Can not support！\n        //use follow\n        A::test();//Call A test()\n        $display(\"%m\");\n    endfunction\nendclass\n\ninitial begin\n    C cinst = new();\n    cinst.test();\nend\n\nendmodule\n\n仿真执行结果：\ntb.B.test\ntb.A.test\ntb.C.test\n\n</pre>\n</font> ","source":"_posts/SystemVerilog语法释义.md","raw":"---\ntitle: SystemVerilog语法释义\ndate: 2019-04-16 16:08:43\ntags: [UVM,SystemVerilog]\ncategories: 验证\n---\n## 1.浮点数转换\n\n### ieee1800-2017解释：\n\n\tReal numbers shall be converted to integers by rounding the real number to the nearest integer, rather than by truncating it. \n\tImplicit conversion shall take place when a real number is assigned to an integer. \n\tIf the fractional part of the real number is exactly 0.5, it shall be rounded away from zero.\n\t\n<font color=blue>\n代码例子：\n<pre name=\"code\" class=\"systemverilog\">     \t\nint x_int;\t\nx_int = 2.4;//x_int --> 2\nx_int = 2.5;//x_int --> 3\nx_int = int'(2.5);//x_int --> 2 \n</pre>   \n</font> \n\n## 2.数据比特位快速反转\n<font color=blue>\n代码例子：\n<pre name=\"code\" class=\"systemverilog\">  \t\nbit [15:0] x = 16'b0000_1011_0000_0011;\nx= { << {x} }; //x --> 16'b1100_0000_1101_0000;\n</pre>\n</font> \n\n## 3.super.super如何解决无法支持问题？\n<font color=blue>\n代码例子：\n<pre name=\"code\" class=\"systemverilog\">  \t\nmodule tb;\n\nclass A;\n    virtual function void test();\n        $display(\"%m\");\n    endfunction\nendclass\n\nclass B extends A;\n    virtual function void test();\n        $display(\"%m\");\n    endfunction\nendclass\n\nclass C extends B;\n    virtual function void test();\n        super.test();//Call B test()\n        //super.super.test();//error!Can not support！\n        //use follow\n        A::test();//Call A test()\n        $display(\"%m\");\n    endfunction\nendclass\n\ninitial begin\n    C cinst = new();\n    cinst.test();\nend\n\nendmodule\n\n仿真执行结果：\ntb.B.test\ntb.A.test\ntb.C.test\n\n</pre>\n</font> ","slug":"SystemVerilog语法释义","published":1,"updated":"2019-04-18T04:26:17.027Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjunjb1lx000zl8al1e9no1oa","content":"<h2 id=\"1-浮点数转换\"><a href=\"#1-浮点数转换\" class=\"headerlink\" title=\"1.浮点数转换\"></a>1.浮点数转换</h2><h3 id=\"ieee1800-2017解释：\"><a href=\"#ieee1800-2017解释：\" class=\"headerlink\" title=\"ieee1800-2017解释：\"></a>ieee1800-2017解释：</h3><pre><code>Real numbers shall be converted to integers by rounding the real number to the nearest integer, rather than by truncating it. \nImplicit conversion shall take place when a real number is assigned to an integer. \nIf the fractional part of the real number is exactly 0.5, it shall be rounded away from zero.\n</code></pre><font color=\"blue\"><br>代码例子：<br><pre name=\"code\" class=\"systemverilog\"><br>int x_int;<br>x_int = 2.4;//x_int –&gt; 2<br>x_int = 2.5;//x_int –&gt; 3<br>x_int = int’(2.5);//x_int –&gt; 2<br></pre><br></font> \n\n<h2 id=\"2-数据比特位快速反转\"><a href=\"#2-数据比特位快速反转\" class=\"headerlink\" title=\"2.数据比特位快速反转\"></a>2.数据比特位快速反转</h2><font color=\"blue\"><br>代码例子：<br><pre name=\"code\" class=\"systemverilog\"><br>bit [15:0] x = 16’b0000_1011_0000_0011;<br>x= { &lt;&lt; {x} }; //x –&gt; 16’b1100_0000_1101_0000;<br></pre><br></font> \n\n<h2 id=\"3-super-super如何解决无法支持问题？\"><a href=\"#3-super-super如何解决无法支持问题？\" class=\"headerlink\" title=\"3.super.super如何解决无法支持问题？\"></a>3.super.super如何解决无法支持问题？</h2><font color=\"blue\"><br>代码例子：<br><pre name=\"code\" class=\"systemverilog\"><br>module tb;<br><br>class A;<br>    virtual function void test();<br>        $display(“%m”);<br>    endfunction<br>endclass<br><br>class B extends A;<br>    virtual function void test();<br>        $display(“%m”);<br>    endfunction<br>endclass<br><br>class C extends B;<br>    virtual function void test();<br>        super.test();//Call B test()<br>        //super.super.test();//error!Can not support！<br>        //use follow<br>        A::test();//Call A test()<br>        $display(“%m”);<br>    endfunction<br>endclass<br><br>initial begin<br>    C cinst = new();<br>    cinst.test();<br>end<br><br>endmodule<br><br>仿真执行结果：<br>tb.B.test<br>tb.A.test<br>tb.C.test<br><br></pre><br></font> ","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-浮点数转换\"><a href=\"#1-浮点数转换\" class=\"headerlink\" title=\"1.浮点数转换\"></a>1.浮点数转换</h2><h3 id=\"ieee1800-2017解释：\"><a href=\"#ieee1800-2017解释：\" class=\"headerlink\" title=\"ieee1800-2017解释：\"></a>ieee1800-2017解释：</h3><pre><code>Real numbers shall be converted to integers by rounding the real number to the nearest integer, rather than by truncating it. \nImplicit conversion shall take place when a real number is assigned to an integer. \nIf the fractional part of the real number is exactly 0.5, it shall be rounded away from zero.\n</code></pre><font color=\"blue\"><br>代码例子：<br><pre name=\"code\" class=\"systemverilog\"><br>int x_int;<br>x_int = 2.4;//x_int –&gt; 2<br>x_int = 2.5;//x_int –&gt; 3<br>x_int = int’(2.5);//x_int –&gt; 2<br></pre><br></font> \n\n<h2 id=\"2-数据比特位快速反转\"><a href=\"#2-数据比特位快速反转\" class=\"headerlink\" title=\"2.数据比特位快速反转\"></a>2.数据比特位快速反转</h2><font color=\"blue\"><br>代码例子：<br><pre name=\"code\" class=\"systemverilog\"><br>bit [15:0] x = 16’b0000_1011_0000_0011;<br>x= { &lt;&lt; {x} }; //x –&gt; 16’b1100_0000_1101_0000;<br></pre><br></font> \n\n<h2 id=\"3-super-super如何解决无法支持问题？\"><a href=\"#3-super-super如何解决无法支持问题？\" class=\"headerlink\" title=\"3.super.super如何解决无法支持问题？\"></a>3.super.super如何解决无法支持问题？</h2><font color=\"blue\"><br>代码例子：<br><pre name=\"code\" class=\"systemverilog\"><br>module tb;<br><br>class A;<br>    virtual function void test();<br>        $display(“%m”);<br>    endfunction<br>endclass<br><br>class B extends A;<br>    virtual function void test();<br>        $display(“%m”);<br>    endfunction<br>endclass<br><br>class C extends B;<br>    virtual function void test();<br>        super.test();//Call B test()<br>        //super.super.test();//error!Can not support！<br>        //use follow<br>        A::test();//Call A test()<br>        $display(“%m”);<br>    endfunction<br>endclass<br><br>initial begin<br>    C cinst = new();<br>    cinst.test();<br>end<br><br>endmodule<br><br>仿真执行结果：<br>tb.B.test<br>tb.A.test<br>tb.C.test<br><br></pre><br></font> "}],"PostAsset":[],"PostCategory":[{"post_id":"cjunjb1kt0000l8alci9xvlsf","category_id":"cjunjb1l30002l8alt7kjgwuh","_id":"cjunjb1ld0008l8almqe2o5uu"},{"post_id":"cjunjb1l90005l8al1gedeeqb","category_id":"cjunjb1la0006l8al530pw7gt","_id":"cjunjb1li000fl8alx702zcng"},{"post_id":"cjunjb1l70004l8almks4vuhs","category_id":"cjunjb1la0006l8al530pw7gt","_id":"cjunjb1lj000hl8almz616jgx"},{"post_id":"cjunjb1l70004l8almks4vuhs","category_id":"cjunjb1lh000dl8alg9tpg6w9","_id":"cjunjb1lk000jl8aldmttlhzm"},{"post_id":"cjunjb1lp000sl8alee5viocw","category_id":"cjunjb1la0006l8al530pw7gt","_id":"cjunjb1ly0010l8alm3f2uolp"},{"post_id":"cjunjb1ls000ul8alo4s963vb","category_id":"cjunjb1la0006l8al530pw7gt","_id":"cjunjb1lz0013l8alc687jiru"},{"post_id":"cjunjb1lu000xl8allqnzwj46","category_id":"cjunjb1la0006l8al530pw7gt","_id":"cjunjb1m00015l8al6dy7xyt6"},{"post_id":"cjunjb1lx000zl8al1e9no1oa","category_id":"cjunjb1la0006l8al530pw7gt","_id":"cjunjb1m20018l8al0kx4rrr7"}],"PostTag":[{"post_id":"cjunjb1kt0000l8alci9xvlsf","tag_id":"cjunjb1l50003l8al6w1z2ad4","_id":"cjunjb1lg000bl8alv1ezjgx0"},{"post_id":"cjunjb1kt0000l8alci9xvlsf","tag_id":"cjunjb1lc0007l8almmptfutm","_id":"cjunjb1lh000cl8alav83il6p"},{"post_id":"cjunjb1l70004l8almks4vuhs","tag_id":"cjunjb1le000al8alxfgx6n7y","_id":"cjunjb1lk000kl8alhfme5b69"},{"post_id":"cjunjb1l70004l8almks4vuhs","tag_id":"cjunjb1lh000el8ala5gcskvu","_id":"cjunjb1ll000ll8alyr9d23v3"},{"post_id":"cjunjb1l70004l8almks4vuhs","tag_id":"cjunjb1li000gl8als6sy1f1m","_id":"cjunjb1ll000nl8al9wf6ujbr"},{"post_id":"cjunjb1l90005l8al1gedeeqb","tag_id":"cjunjb1lh000el8ala5gcskvu","_id":"cjunjb1lm000pl8aluc4jm6pt"},{"post_id":"cjunjb1l90005l8al1gedeeqb","tag_id":"cjunjb1ll000ml8al73p74va0","_id":"cjunjb1lm000ql8alj0ksl4vi"},{"post_id":"cjunjb1l90005l8al1gedeeqb","tag_id":"cjunjb1lm000ol8alb6lhun6l","_id":"cjunjb1ln000rl8alz1pkxshn"},{"post_id":"cjunjb1lp000sl8alee5viocw","tag_id":"cjunjb1lh000el8ala5gcskvu","_id":"cjunjb1lt000wl8alo66sq79o"},{"post_id":"cjunjb1ls000ul8alo4s963vb","tag_id":"cjunjb1le000al8alxfgx6n7y","_id":"cjunjb1lx000yl8alg58p269t"},{"post_id":"cjunjb1ls000ul8alo4s963vb","tag_id":"cjunjb1lh000el8ala5gcskvu","_id":"cjunjb1lz0012l8alx5tmxv7w"},{"post_id":"cjunjb1lx000zl8al1e9no1oa","tag_id":"cjunjb1le000al8alxfgx6n7y","_id":"cjunjb1m00014l8alpt2hz23r"},{"post_id":"cjunjb1lx000zl8al1e9no1oa","tag_id":"cjunjb1lh000el8ala5gcskvu","_id":"cjunjb1m10016l8alblg7afux"},{"post_id":"cjunjb1lu000xl8allqnzwj46","tag_id":"cjunjb1ly0011l8alohzp80dz","_id":"cjunjb1m20019l8alb9tyhi8u"},{"post_id":"cjunjb1lu000xl8allqnzwj46","tag_id":"cjunjb1m10017l8al0etjvzv2","_id":"cjunjb1m3001al8al1ewnv95r"}],"Tag":[{"name":"Linux","_id":"cjunjb1l50003l8al6w1z2ad4"},{"name":"shell","_id":"cjunjb1lc0007l8almmptfutm"},{"name":"UVM","_id":"cjunjb1le000al8alxfgx6n7y"},{"name":"SystemVerilog","_id":"cjunjb1lh000el8ala5gcskvu"},{"name":"RAL","_id":"cjunjb1li000gl8als6sy1f1m"},{"name":"ABV","_id":"cjunjb1ll000ml8al73p74va0"},{"name":"FV","_id":"cjunjb1lm000ol8alb6lhun6l"},{"name":"EDA","_id":"cjunjb1ly0011l8alohzp80dz"},{"name":"gdb","_id":"cjunjb1m10017l8al0etjvzv2"}]}}